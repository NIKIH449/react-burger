{"version":3,"sources":["components/header/header-button/header-button.module.css","components/preloader/preloader.module.css","pages/not-found.module.css","pages/ingredient.module.css","pages/feed.module.css","components/auth-form/auth-form.module.css","utils/hooks.ts","components/burger-ingredients/ingredients-list/ingredients-list.tsx","utils/constants.tsx","utils/utils.ts","services/actions/auth/check-auth.tsx","utils/auth.ts","services/actions/auth/edit-profile.tsx","services/actions/auth/login.tsx","services/actions/auth/recovery-password.tsx","services/actions/auth/refresh-token.tsx","services/actions/auth/register.tsx","services/actions/auth/reset-password.tsx","services/actions/auth/signout.tsx","services/actions/auth/index.tsx","services/actions/ingredients.tsx","utils/Api.ts","services/actions/wsFeed.ts","components/burger-ingredients/burger-ingredients.tsx","components/modal/modal-overlay/modal-overlay.tsx","components/modal/modal.tsx","services/actions/constructor.tsx","components/burger-constructor/constructorElement/constructorFoodElement.tsx","images/done.gif","components/order-details/order-detail.tsx","services/actions/modal.tsx","services/actions/order.tsx","components/burger-constructor/burger-constructor.tsx","components/main/main.tsx","components/header/header-button/header-button.tsx","components/header/app-header.tsx","components/preloader/preloader.tsx","pages/not-found.tsx","components/protected-route/protected-route.tsx","components/auth-form/auth-form.tsx","pages/login.tsx","components/ingredient-details/ingredient-details.tsx","pages/ingredient.tsx","components/profile-button/profile-button.tsx","components/feed-order/feed-order.tsx","pages/profile.tsx","pages/recovery-password.tsx","pages/register.tsx","pages/reset-password.tsx","pages/feed.tsx","components/order-information/order-information.tsx","pages/order.tsx","components/app/app.tsx","services/middleware/socketMiddleware.ts","reportWebVitals.ts","services/reducers/ingredients.tsx","services/reducers/order.tsx","services/reducers/modal.tsx","services/reducers/constructor.tsx","services/reducers/auth.tsx","services/reducers/wsFeed.ts","services/reducers/index.tsx","services/store/store.ts","index.tsx","components/burger-ingredients/burger-ingredients.module.css","components/burger-constructor/burger-constructor.module.css","components/feed-order/feed-order.module.css","components/order-information/order-information.module.css","pages/profile.module.css","components/header/header.module.css","components/ingredient-details/ingredient-details.module.css","components/order-details/order-details.module.css","components/burger-ingredients/ingredients-list/ingredients-list.module.css","components/modal/modal.module.css","components/profile-button/profile-button.module.css","components/app/app.module.css","components/main/main.module.css","components/modal/modal-overlay/modal-overlay.module.css","components/burger-constructor/constructorElement/constructorFoodElement.module.css"],"names":["module","exports","useSelector","selectorHook","useDispatch","dispatchHook","IngredientsList","item","image","name","price","constructorValue","store","useDrag","type","collect","monitor","opacity","isDragging","ingredientRef","style","ref","className","ingredientsListStyle","count","constructor","bun","filter","element","_id","length","size","other","draggable","src","alt","BURGER_URL","checkResponse","res","ok","json","Promise","reject","status","GET_CHECK_AUTH_REQUEST","GET_CHECK_AUTH_SUCCESS","GET_CHECK_AUTH_FAILED","getGetCheckAuthFailedAction","onCheckAuth","accessToken","refreshToken","pathname","dispatch","token","getLoadingStartAction","fetch","method","headers","Authorization","then","data","success","getLeggedInAction","getGetCheckAuthSuccessAction","localStorage","setItem","user","email","getLoadingEndAction","catch","GET_EDITPROFILE_REQUEST","GET_EDITPROFILE_SUCCESS","GET_EDITPROFILE_FAILED","GET_EDITPROFILE_RESET","getGetEditProfileFailedAction","onEditUserInfo","password","body","JSON","stringify","updateUserInfo","getGetEditProfileSuccessAction","message","GET_LOGIN_REQUEST","GET_LOGIN_SUCCESS","GET_LOGIN_FAILED","getLoginFailedAction","onLogin","signIn","getLoginSuccessAction","split","GET_RECOVERY_PASSWORD_REQUEST","GET_RECOVERY_PASSWORD_SUCCESS","GET_RECOVERY_PASSWORD_FAILED","getRecoveryPasswordFailedAction","onRecoveryPassword","recoveryPassword","getRecoveryPasswordSuccessAction","GET_REFRESH_TOKEN_REQUEST","GET_REFRESH_TOKEN_SUCCESS","GET_REFRESH_TOKEN_FAILED","getRefreshTokenFailedAction","onRefreshToken","getRefreshTokenSuccessAction","GET_REGISTER_REQUEST","GET_REGISTER_SUCCESS","GET_REGISTER_FAILED","getRegisterRequestAction","getRegisterFailedAction","onRegister","signUp","getRegisterSuccessAction","GET_RESET_PASSWORD_REQUEST","GET_RESET_PASSWORD_SUCCESS","GET_RESET_PASSWORD_FAILED","onResetPassword","resetPassword","getResetPasswordSuccessAction","GET_SIGNOUT_SUCCESS","GET_SIGNOUT_REQUEST","GET_SIGNOUT_FAILED","getSignoutFailedAction","onSignOut","signOut","getSignoutSuccessAction","removeItem","GET_LOGGED_IN","LOADING_END","LOADING_START","GET_INGREDIENTS_REQUEST","GET_INGREDIENTS_SUCCESS","GET_INGREDIENTS_FAILED","getIngredientsFailedAction","getIngredients","getIngredientsSuccessAction","WS_CONNECTION_START","WS_CONNECTION_START_FOR_USER","WS_CONNECTION_SUCCESS","WS_CONNECTION_ERROR","WS_CONNECTION_CLOSED","WS_GET_ORDER","WS_GET_USER_ORDER","wsConnectionStart","wsConnectionClosed","BurgerIngredients","React","useState","current","setCurrent","ingredients","russian","getItem","location","useLocation","bunRef","useRef","sauseRef","mainRef","scrollRef","wsConnected","wsFeed","useEffect","burgerIngredientsStyle","burgerIngredients","title","display","onClick","scrollIntoView","behavior","value","active","onScroll","e","scrollY","target","scrollTop","sauseY","offsetTop","mainY","container","subtitle","id","list","map","textDecoration","to","state","background","ModalOverlay","children","modalOverlayStyle","overlay","Modal","onClose","isLoading","onEscClose","key","window","addEventListener","removeEventListener","createPortal","modalStyle","modal","stopPropagation","button","document","getElementById","ADD_INGREDIENT","DELETE_INGREDIENT","DELETE_ALL_INGREDIENTS","MOVE_INGREDIENT","ConstructorFoodElement","moveIngredient","index","sortTarget","useDrop","accept","hover","dragIndex","findIndex","isOver","drop","drag","ConstructorFoodElementStyle","ingredient","handleClose","getDeleteIngredientAction","text","thumbnail","OrderDeatils","number","orderDetails","done","OPEN_MODAL_ORDER","CLOSE_MODAL_ORDER","OPEN_MODAL_INGREDIENT","CLOSE_MODAL_INGREDIENT","getCloseIngredientModalAction","GET_ORDER_REQUEST","GET_ORDER_SUCCESS","GET_ORDER_FAILED","getGetOrderFailedAction","createOrder","sentOrderRequest","getGetOrderSuccessAction","BurgerConstructor","loggedIn","auth","isModalOpen","isOrder","order","orderSuccess","orderRequest","navigate","useNavigate","finishOrder","arr","i","push","orderIdentificators","handleCloseModal","newItem","dropTarget","useCallback","hoverIndex","dragIngredient","newConstructor","splice","getMoveIngredientsAction","burgerConstructorStyle","burgerConstructor","empty","isLocked","String","sum","reduce","acc","disabled","Main","mainStyle","main","DndProvider","backend","HTML5Backend","HeaderButton","link","headerButtonStyle","AppHeader","headerStyles","header","navigation","logo","href","languageButton","Preloader","preloaderStyle","preloader","NotFound","notFoundStyles","notFound","ProtectedRoute","path","AuthForm","onSubmit","question","questionLink","recovery","recoveryLink","authFormStyle","form","inputContainer","paragraph","Login","setEmail","setPassword","loginSuccess","loginFailed","preventDefault","onChange","placeholder","IngredientDetails","calories","proteins","fat","carbohydrates","ingredientDetailsStyle","ingredientDetails","Ingredient","currentId","useParams","ingredientStyles","ProfileButton","profileButtonStyle","FeedOrder","date","allIngredients","orderIngredients","find","findIngredients","imageStyle","backgroundImage","backgroundPosition","zIndex","color","feedOrderStyle","tracking","currentDate","Date","orderDay","Number","replace","slice","orderTime","term","getDate","parseDate","pictures","undefined","rest","image_mobile","lastPicture","picture","Profile","refreshTokenSuccess","signOutSuccess","editProfileSuccess","userEmail","setUserEmail","userName","setUserName","isInputChange","setIsInputChange","isAccessToken","orders","userFeed","profileStyles","profile","information","icon","buttonContainer","parse","cancelButton","reverse","createdAt","RecoveryPassword","recoveryPasswordSuccess","Register","setName","registerSuccess","errorText","ResetPassword","code","setCode","resetPasswordSuccess","Feed","feed","feedStyle","orderList","orderInforamtion","orderTable","orderTableTitle","orderTableInProgress","numberShadow","total","totalToday","OrderInforamtion","filterIngredients","indexOf","x","feedOrderInforamtionStyles","info","Order","userOrders","findOrder","findUserOrder","App","wsUrl","wsActions","authLoading","chekAuthFailed","checkAuth","appStyles","app","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","initialState","ingredientsLoading","ingredientsRequest","ingredientsFailed","ingredientsSucces","orderFailed","isIngredient","constructorRequest","constructorFailed","registerRequest","registerFailed","loginRequest","signOutRequest","signOutFailed","resetPasswordRequest","resetPasswordFailed","recoveryPasswordRequest","recoveryPasswordFailed","editProfileRequest","editProfileFailed","refreshTokenRequest","refreshTokenFailed","chekAuthRequest","chekAuthSuccess","loading","feedLoading","feedSuccess","feedRequest","rootReducer","combineReducers","action","wsInit","wsUserInit","wsUserOrder","wsSendMessage","onOpen","onError","onMessage","enhancer","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","applyMiddleware","thunk","socket","next","WebSocket","onopen","send","onerror","onmessage","event","parsedData","restParsedData","url","match","wsGetOrder","wsGetUserOrder","onclose","createStore","ReactDOM","render","StrictMode"],"mappings":"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","file":"static/js/main.bfc74f57.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"header-button_button__1vuUZ\",\"link\":\"header-button_link__1uRYX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"preloader\":\"preloader_preloader__3tFPF\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notFound\":\"not-found_notFound__VzWQV\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"ingredient_ingredient__3HZvm\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feed\":\"feed_feed__2YxHb\",\"container\":\"feed_container__1HKWa\",\"orderList\":\"feed_orderList__2D9XH\",\"orderInforamtion\":\"feed_orderInforamtion__3ZUCb\",\"orderTableTitle\":\"feed_orderTableTitle__frhnX\",\"orderTable\":\"feed_orderTable__2CPbI\",\"orders\":\"feed_orders__1Rdf5\",\"orderTableInProgress\":\"feed_orderTableInProgress__3xUv6\",\"numberShadow\":\"feed_numberShadow__2UJuJ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"form\":\"auth-form_form__5tgfF\",\"auth\":\"auth-form_auth__qEc4f\",\"button\":\"auth-form_button__p3v9i\",\"title\":\"auth-form_title__16qBP\",\"container\":\"auth-form_container__3VgA7\",\"inputContainer\":\"auth-form_inputContainer__367Qo\",\"link\":\"auth-form_link__3dLqO\",\"paragraph\":\"auth-form_paragraph__2A-FI\"};","import {\r\n  TypedUseSelectorHook,\r\n  useDispatch as dispatchHook,\r\n  useSelector as selectorHook\r\n} from 'react-redux';\r\nimport { AppDispatch, AppThunk, RootState } from './index';\r\n\r\nexport const useSelector: TypedUseSelectorHook<RootState> = selectorHook;\r\nexport const useDispatch = () => dispatchHook<AppDispatch | AppThunk>();","import React, { FC } from 'react';\r\nimport ingredientsListStyle from './ingredients-list.module.css';\r\nimport {\r\n  CurrencyIcon,\r\n  Counter,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useDrag } from 'react-dnd';\r\nimport { useSelector } from '../../../utils/hooks';\r\nimport { TItem } from 'utils/types';\r\nconst IngredientsList: FC<{\r\n  item: TItem;\r\n  image: string;\r\n  name: string;\r\n  price: number;\r\n}> = ({ item, image, name, price }) => {\r\n  const constructorValue = useSelector((store) => store.constructorValue);\r\n\r\n  function countBun() {\r\n    return (\r\n      constructorValue.constructor.bun.filter(\r\n        (element: { _id: string }) => element._id === item._id\r\n      ).length * 2\r\n    );\r\n  }\r\n\r\n  function countIngredients() {\r\n    return constructorValue.constructor.other.filter(\r\n      (element: { _id: string }) => element._id === item._id\r\n    ).length;\r\n  }\r\n\r\n  const [{ opacity }, ingredientRef] = useDrag({\r\n    type: item.type,\r\n    item: item,\r\n    collect: (monitor) => ({\r\n      opacity: monitor.isDragging() ? 0.3 : 1,\r\n    }),\r\n  });\r\n  return (\r\n    <li\r\n      style={{ opacity }}\r\n      ref={ingredientRef}\r\n      className={ingredientsListStyle.item}\r\n    >\r\n      {item.type === 'bun' ? (\r\n        <Counter count={countBun()} size=\"default\" />\r\n      ) : (\r\n        <Counter count={countIngredients()} size=\"default\" />\r\n      )}\r\n      <img\r\n        draggable\r\n        className={ingredientsListStyle.image}\r\n        src={image}\r\n        alt={name}\r\n      />\r\n      <p className=\"text text_type_digits-default\">\r\n        {price} <CurrencyIcon type=\"primary\" />\r\n      </p>\r\n      <p className=\"text text_type_main-default\">{name}</p>\r\n    </li>\r\n  );\r\n};\r\nexport { IngredientsList };\r\n","const BURGER_URL = 'https://norma.nomoreparties.space/api/';\r\nconst WS_URL = 'wss://norma.nomoreparties.space/orders';\r\nexport { BURGER_URL, WS_URL };\r\n","export const checkResponse = (res: Response) => {\r\n  if (res.ok) {\r\n    return res.json();\r\n  }\r\n  return Promise.reject(`Ошибка: ${res.status}`);\r\n};","import { TUser } from 'utils/types';\r\nimport { checkValidity } from 'utils/auth';\r\nimport { getLoadingEndAction, getLoadingStartAction } from '.';\r\nimport { getLeggedInAction } from '.';\r\nimport { AppDispatch, AppThunk } from 'utils';\r\nexport const GET_CHECK_AUTH_REQUEST: 'GET_CHECK_AUTH_REQUEST' =\r\n  'GET_CHECK_AUTH_REQUEST';\r\nexport const GET_CHECK_AUTH_SUCCESS: 'GET_CHECK_AUTH_SUCCESS' =\r\n  'GET_CHECK_AUTH_SUCCESS';\r\nexport const GET_CHECK_AUTH_FAILED: 'GET_CHECK_AUTH_FAILED' =\r\n  'GET_CHECK_AUTH_FAILED';\r\n\r\nexport interface IGetCheckAuthRequestAction {\r\n  readonly type: typeof GET_CHECK_AUTH_REQUEST;\r\n}\r\n\r\nexport interface IGetCheckAuthSuccessAction {\r\n  readonly type: typeof GET_CHECK_AUTH_SUCCESS;\r\n  readonly data: TUser;\r\n}\r\nexport interface IGetCheckAuthFailedAction {\r\n  readonly type: typeof GET_CHECK_AUTH_FAILED;\r\n}\r\nexport type TGetCheckAuthAction =\r\n  | IGetCheckAuthRequestAction\r\n  | IGetCheckAuthSuccessAction\r\n  | IGetCheckAuthFailedAction;\r\n\r\nexport const getGetCheckAuthRequestAction = (): TGetCheckAuthAction => ({\r\n  type: GET_CHECK_AUTH_REQUEST,\r\n});\r\nexport const getGetCheckAuthSuccessAction = (\r\n  data: TUser\r\n): TGetCheckAuthAction => ({\r\n  type: GET_CHECK_AUTH_SUCCESS,\r\n  data,\r\n});\r\nexport const getGetCheckAuthFailedAction = (): TGetCheckAuthAction => ({\r\n  type: GET_CHECK_AUTH_FAILED,\r\n});\r\n\r\nexport const onCheckAuth: AppThunk =\r\n  (accessToken: string, refreshToken: string, pathname: string) => (dispatch: AppDispatch) => {\r\n    (pathname === '/profile' || pathname === '/profile/orders') &&\r\n      dispatch(getLoadingStartAction());\r\n    dispatch(getGetCheckAuthRequestAction());\r\n    checkValidity(accessToken)\r\n      .then((data) => {\r\n        if (data && data.success) {\r\n          dispatch(getLeggedInAction());\r\n          dispatch(getGetCheckAuthSuccessAction(data));\r\n          localStorage.setItem('userName', data.user.name);\r\n          localStorage.setItem('userEmail', data.user.email);\r\n          (pathname === '/profile' || pathname === '/profile/orders') &&\r\n            dispatch(getLoadingEndAction());\r\n        } else {\r\n          dispatch(getGetCheckAuthFailedAction());\r\n        }\r\n      })\r\n      .catch(() => {\r\n        dispatch(getGetCheckAuthFailedAction());\r\n      });\r\n  };\r\n","import { BURGER_URL } from './constants';\r\nimport { checkResponse } from 'utils/utils';\r\n\r\nexport const signUp = (email: string, password: string, name: string) => {\r\n  return fetch(BURGER_URL + 'auth/register', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ password, email, name }),\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const signIn = (email: string, password: string) => {\r\n  return fetch(BURGER_URL + 'auth/login', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ password, email }),\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const checkValidity = (token: string) => {\r\n  return fetch(BURGER_URL + 'auth/user', {\r\n    method: 'GET',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const refreshingToken = (token: string) => {\r\n  return fetch(BURGER_URL + 'auth/token', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ token }),\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const updateUserInfo = (\r\n  email: string,\r\n  name: string,\r\n  password: string,\r\n  token: string\r\n) => {\r\n  return fetch(BURGER_URL + 'auth/user', {\r\n    method: 'PATCH',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({ email, name, password, token }),\r\n  }).then((res) => res.json());\r\n};\r\n\r\nexport const signOut = (token: string) => {\r\n  return fetch(BURGER_URL + 'auth/logout ', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ token }),\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const recoveryPassword = (email: string) => {\r\n  return fetch(BURGER_URL + 'password-reset', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ email }),\r\n  }).then(checkResponse);\r\n};\r\n\r\nexport const resetPassword = (password: string, token: string) => {\r\n  return fetch(BURGER_URL + 'password-reset/reset', {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n    },\r\n    body: JSON.stringify({ password, token }),\r\n  }).then(checkResponse);\r\n};\r\n","import { TUser } from 'utils/types';\r\nimport { updateUserInfo } from 'utils/auth';\r\nimport { AppDispatch, AppThunk } from 'utils';\r\nimport { getGetCheckAuthFailedAction } from './check-auth';\r\nexport const GET_EDITPROFILE_REQUEST: 'GET_EDITPROFILE_REQUEST' =\r\n  'GET_EDITPROFILE_REQUEST';\r\nexport const GET_EDITPROFILE_SUCCESS: 'GET_EDITPROFILE_SUCCESS' =\r\n  'GET_EDITPROFILE_SUCCESS';\r\nexport const GET_EDITPROFILE_FAILED: 'GET_EDITPROFILE_FAILED' =\r\n  'GET_EDITPROFILE_FAILED';\r\nexport const GET_EDITPROFILE_RESET: 'GET_EDITPROFILE_RESET' =\r\n  'GET_EDITPROFILE_RESET';\r\nexport interface IGetEditProfileRequestAction {\r\n  readonly type: typeof GET_EDITPROFILE_REQUEST;\r\n}\r\n\r\nexport interface IGetEditProfileSuccessAction {\r\n  readonly type: typeof GET_EDITPROFILE_SUCCESS;\r\n  readonly data: Omit<TUser, 'accessToken' & 'refreshToken'>;\r\n}\r\nexport interface IGetEditProfileFailedAction {\r\n  readonly type: typeof GET_EDITPROFILE_FAILED;\r\n}\r\nexport interface IGetEditProfileResetAction {\r\n  readonly type: typeof GET_EDITPROFILE_RESET;\r\n}\r\nexport type TGetEditProfile =\r\n  | IGetEditProfileRequestAction\r\n  | IGetEditProfileSuccessAction\r\n  | IGetEditProfileFailedAction\r\n  | IGetEditProfileResetAction;\r\n\r\nexport const getGetEditProfileRequestAction = (): TGetEditProfile => ({\r\n  type: GET_EDITPROFILE_REQUEST,\r\n});\r\nexport const getGetEditProfileSuccessAction = (\r\n  data: Omit<TUser, 'accessToken' & 'refreshToken'>\r\n): TGetEditProfile => ({\r\n  type: GET_EDITPROFILE_SUCCESS,\r\n  data,\r\n});\r\nexport const getGetEditProfileFailedAction = (): TGetEditProfile => ({\r\n  type: GET_EDITPROFILE_FAILED,\r\n});\r\nexport const getGetEditProfileResetAction = (): TGetEditProfile => ({\r\n  type: GET_EDITPROFILE_RESET,\r\n});\r\n\r\nexport const onEditUserInfo: AppThunk =\r\n  (email: string, name: string, password: string, token: string) =>\r\n  (dispatch: AppDispatch) => {\r\n    dispatch(getGetEditProfileRequestAction());\r\n    updateUserInfo(email, name, password, token)\r\n      .then((data) => {\r\n        if (data && data.success) {\r\n          dispatch(getGetEditProfileSuccessAction(data));\r\n          localStorage.setItem('userName', data.user.name);\r\n          localStorage.setItem('userEmail', data.user.email);\r\n        } else if (data && data.message === 'jwt malformed') {\r\n          dispatch(getGetCheckAuthFailedAction());\r\n        } else {\r\n          dispatch(getGetEditProfileFailedAction());\r\n        }\r\n      })\r\n      .catch(() => {\r\n        dispatch(getGetEditProfileFailedAction());\r\n      });\r\n  };\r\n","import { TLogin } from 'utils/types';\r\nimport { signIn } from 'utils/auth';\r\nimport { AppDispatch, AppThunk } from 'utils';\r\nexport const GET_LOGIN_REQUEST: 'GET_LOGIN_REQUEST' = 'GET_LOGIN_REQUEST';\r\nexport const GET_LOGIN_SUCCESS: 'GET_LOGIN_SUCCESS' = 'GET_LOGIN_SUCCESS';\r\nexport const GET_LOGIN_FAILED: 'GET_LOGIN_FAILED' = 'GET_LOGIN_FAILED';\r\n\r\nexport interface ILoginRequestAction {\r\n  readonly type: typeof GET_LOGIN_REQUEST;\r\n}\r\n\r\nexport interface ILoginSuccessAction {\r\n  readonly type: typeof GET_LOGIN_SUCCESS;\r\n  readonly data: TLogin;\r\n}\r\nexport interface ILoginFailedAction {\r\n  readonly type: typeof GET_LOGIN_FAILED;\r\n}\r\nexport type TLoginAction =\r\n  | ILoginRequestAction\r\n  | ILoginSuccessAction\r\n  | ILoginFailedAction;\r\n\r\nexport const getLoginRequestAction = (): TLoginAction => ({\r\n  type: GET_LOGIN_REQUEST,\r\n});\r\n\r\nexport const getLoginSuccessAction = (data: TLogin): TLoginAction => ({\r\n  type: GET_LOGIN_SUCCESS,\r\n  data,\r\n});\r\n\r\nexport const getLoginFailedAction = (): TLoginAction => ({\r\n  type: GET_LOGIN_FAILED,\r\n});\r\n\r\nexport const onLogin: AppThunk =\r\n  (email: string, password: string) => (dispatch: AppDispatch) => {\r\n    dispatch(getLoginRequestAction());\r\n    signIn(email, password)\r\n      .then((data) => {\r\n        if (data && data.success) {\r\n          dispatch(getLoginSuccessAction(data));\r\n          localStorage.setItem('userName', data.user.name);\r\n          localStorage.setItem('userEmail', data.user.email);\r\n          localStorage.setItem(\r\n            'accessToken',\r\n            data.accessToken.split('Bearer ')[1]\r\n          );\r\n          localStorage.setItem('refreshToken', data.refreshToken);\r\n        } else {\r\n          dispatch(getLoginFailedAction());\r\n        }\r\n      })\r\n      .catch(() => {\r\n        dispatch(getLoginFailedAction());\r\n      });\r\n  };\r\n","import { TRecoveryPassword } from 'utils/types';\r\nimport { recoveryPassword } from 'utils/auth';\r\nimport { AppDispatch, AppThunk } from 'utils';\r\nexport const GET_RECOVERY_PASSWORD_REQUEST: 'GET_RECOVERY_PASSWORD_REQUEST' =\r\n  'GET_RECOVERY_PASSWORD_REQUEST';\r\nexport const GET_RECOVERY_PASSWORD_SUCCESS: 'GET_RECOVERY_PASSWORD_SUCCESS' =\r\n  'GET_RECOVERY_PASSWORD_SUCCESS';\r\nexport const GET_RECOVERY_PASSWORD_FAILED: 'GET_RECOVERY_PASSWORD_FAILED' =\r\n  'GET_RECOVERY_PASSWORD_FAILED';\r\nexport interface IGetRecoveryPasswordRequestAction {\r\n  readonly type: typeof GET_RECOVERY_PASSWORD_REQUEST;\r\n}\r\n\r\nexport interface IGetRecoveryPasswordSuccessAction {\r\n  readonly type: typeof GET_RECOVERY_PASSWORD_SUCCESS;\r\n  readonly data: TRecoveryPassword;\r\n}\r\nexport interface IGetRecoveryPasswordFailedAction {\r\n  readonly type: typeof GET_RECOVERY_PASSWORD_FAILED;\r\n}\r\nexport type TRecoveryPasswordAction =\r\n  | IGetRecoveryPasswordRequestAction\r\n  | IGetRecoveryPasswordSuccessAction\r\n  | IGetRecoveryPasswordFailedAction;\r\n\r\nexport const getRecoveryPasswordRequestAction = (): TRecoveryPasswordAction => ({\r\n  type: GET_RECOVERY_PASSWORD_REQUEST,\r\n});\r\n\r\nexport const getRecoveryPasswordSuccessAction = (\r\n  data: TRecoveryPassword\r\n): TRecoveryPasswordAction => ({\r\n  type: GET_RECOVERY_PASSWORD_SUCCESS,\r\n  data,\r\n});\r\n\r\nexport const getRecoveryPasswordFailedAction = (): TRecoveryPasswordAction => ({\r\n  type: GET_RECOVERY_PASSWORD_FAILED,\r\n});\r\nexport const onRecoveryPassword: AppThunk = (email: string) => (dispatch: AppDispatch) => {\r\n  dispatch(getRecoveryPasswordRequestAction());\r\n  recoveryPassword(email)\r\n    .then((data) => {\r\n      if (data && data.success) {\r\n        dispatch(getRecoveryPasswordSuccessAction(data));\r\n      } else {\r\n        dispatch(getRecoveryPasswordFailedAction());\r\n      }\r\n    })\r\n    .catch(() => {\r\n      dispatch(getRecoveryPasswordFailedAction());\r\n    });\r\n};\r\n","import { AppDispatch, AppThunk } from 'utils';\r\nimport { refreshingToken } from 'utils/auth';\r\nimport { TRefreshToken } from 'utils/types';\r\nimport { getLoadingEndAction } from '.';\r\nexport const GET_REFRESH_TOKEN_REQUEST: 'GET_REFRESH_TOKEN_REQUEST' =\r\n  'GET_REFRESH_TOKEN_REQUEST';\r\nexport const GET_REFRESH_TOKEN_SUCCESS: 'GET_REFRESH_TOKEN_SUCCESS' =\r\n  'GET_REFRESH_TOKEN_SUCCESS';\r\nexport const GET_REFRESH_TOKEN_FAILED: 'GET_REFRESH_TOKEN_FAILED' =\r\n  'GET_REFRESH_TOKEN_FAILED';\r\nexport interface IGetRefreshTokenRequestAction {\r\n  readonly type: typeof GET_REFRESH_TOKEN_REQUEST;\r\n}\r\n\r\nexport interface IGetRefreshTokenSuccessAction {\r\n  readonly type: typeof GET_REFRESH_TOKEN_SUCCESS;\r\n  readonly data: TRefreshToken;\r\n}\r\nexport interface IGetRefreshTokenFailedAction {\r\n  readonly type: typeof GET_REFRESH_TOKEN_FAILED;\r\n}\r\nexport type TGetRefreshTokenAction =\r\n  | IGetRefreshTokenRequestAction\r\n  | IGetRefreshTokenSuccessAction\r\n  | IGetRefreshTokenFailedAction;\r\n\r\nexport const getRefreshTokenRequestAction = (): TGetRefreshTokenAction => ({\r\n  type: GET_REFRESH_TOKEN_REQUEST,\r\n});\r\n\r\nexport const getRefreshTokenSuccessAction = (\r\n  data: TRefreshToken\r\n): TGetRefreshTokenAction => ({\r\n  type: GET_REFRESH_TOKEN_SUCCESS,\r\n  data,\r\n});\r\n\r\nexport const getRefreshTokenFailedAction = (): TGetRefreshTokenAction => ({\r\n  type: GET_REFRESH_TOKEN_FAILED,\r\n});\r\nexport const onRefreshToken: AppThunk =\r\n  (refreshToken: string) => (dispatch: AppDispatch) => {\r\n    dispatch(getRefreshTokenRequestAction());\r\n    refreshingToken(refreshToken)\r\n      .then((data) => {\r\n        if (data && data.success) {\r\n          dispatch(getRefreshTokenSuccessAction(data));\r\n        } else {\r\n          dispatch(getLoadingEndAction());\r\n          dispatch(getRefreshTokenFailedAction());\r\n        }\r\n      })\r\n      .catch(() => {\r\n        dispatch(getLoadingEndAction());\r\n        dispatch(getRefreshTokenFailedAction());\r\n      });\r\n  };\r\n","import { TRegister } from 'utils/types';\nimport { signUp } from 'utils/auth';\nimport { AppDispatch, AppThunk } from 'utils';\n\nexport const GET_REGISTER_REQUEST: 'GET_REGISTER_REQUEST' =\n  'GET_REGISTER_REQUEST';\nexport const GET_REGISTER_SUCCESS: 'GET_REGISTER_SUCCESS' =\n  'GET_REGISTER_SUCCESS';\nexport const GET_REGISTER_FAILED: 'GET_REGISTER_FAILED' = 'GET_REGISTER_FAILED';\nexport interface IGetRegisterRequestAction {\n  readonly type: typeof GET_REGISTER_REQUEST;\n}\n\nexport interface IGetRegisterSuccessAction {\n  readonly type: typeof GET_REGISTER_SUCCESS;\n  readonly data: TRegister;\n}\nexport interface IGetRegisterFailedAction {\n  readonly type: typeof GET_REGISTER_FAILED;\n}\nexport type TGetRegisterAction =\n  | IGetRegisterRequestAction\n  | IGetRegisterSuccessAction\n  | IGetRegisterFailedAction;\n\nexport const getRegisterRequestAction = (): TGetRegisterAction => ({\n  type: GET_REGISTER_REQUEST,\n});\n\nexport const getRegisterSuccessAction = (\n  data: TRegister\n): TGetRegisterAction => ({\n  type: GET_REGISTER_SUCCESS,\n  data,\n});\n\nexport const getRegisterFailedAction = (): TGetRegisterAction => ({\n  type: GET_REGISTER_FAILED,\n});\nexport const onRegister: AppThunk =\n  (email: string, password: string, name: string) => (dispatch: AppDispatch) => {\n    dispatch(getRegisterRequestAction());\n    signUp(email, password, name)\n      .then((data) => {\n        if (data && data.success) {\n          dispatch(getRegisterSuccessAction(data));\n          localStorage.setItem('userName', data.user.name);\n          localStorage.setItem('userEmail', data.user.email);\n          localStorage.setItem(\n            'accessToken',\n            data.accessToken.split('Bearer ')[1]\n          );\n          localStorage.setItem('refreshToken', data.refreshToken);\n        } else {\n          dispatch(getRegisterFailedAction());\n        }\n      })\n      .catch(() => {\n        dispatch(getRegisterFailedAction());\n      });\n  };\n","import { TDefaultResponse } from 'utils/types';\r\nimport { resetPassword } from 'utils/auth';\r\nimport { getRecoveryPasswordFailedAction } from './recovery-password';\r\nimport { getRegisterRequestAction } from './register';\r\nimport { AppDispatch, AppThunk } from 'utils';\r\n\r\nexport const GET_RESET_PASSWORD_REQUEST: 'GET_RESET_PASSWORD_REQUEST' =\r\n  'GET_RESET_PASSWORD_REQUEST';\r\nexport const GET_RESET_PASSWORD_SUCCESS: 'GET_RESET_PASSWORD_SUCCESS' =\r\n  'GET_RESET_PASSWORD_SUCCESS';\r\nexport const GET_RESET_PASSWORD_FAILED: 'GET_RESET_PASSWORD_FAILED' =\r\n  'GET_RESET_PASSWORD_FAILED';\r\nexport interface IGetResetPasswordRequestAction {\r\n  readonly type: typeof GET_RESET_PASSWORD_REQUEST;\r\n}\r\n\r\nexport interface IGetResetPasswordSuccessAction {\r\n  readonly type: typeof GET_RESET_PASSWORD_SUCCESS;\r\n  readonly data: TDefaultResponse;\r\n}\r\nexport interface IGetResetPasswordFailedAction {\r\n  readonly type: typeof GET_RESET_PASSWORD_FAILED;\r\n}\r\nexport type TGetResetPasswordAction =\r\n  | IGetResetPasswordRequestAction\r\n  | IGetResetPasswordSuccessAction\r\n  | IGetResetPasswordFailedAction;\r\n\r\nexport const getResetPasswordRequestAction = (): TGetResetPasswordAction => ({\r\n  type: GET_RESET_PASSWORD_REQUEST,\r\n});\r\n\r\nexport const getResetPasswordSuccessAction = (\r\n  data: TDefaultResponse\r\n): TGetResetPasswordAction => ({\r\n  type: GET_RESET_PASSWORD_SUCCESS,\r\n  data,\r\n});\r\n\r\nexport const getResetPasswordFailedAction = (): TGetResetPasswordAction => ({\r\n  type: GET_RESET_PASSWORD_FAILED,\r\n});\r\nexport const onResetPassword: AppThunk =\r\n  (password: string, token: string) => (dispatch: AppDispatch) => {\r\n    dispatch(getRegisterRequestAction());\r\n    resetPassword(password, token)\r\n      .then((data) => {\r\n        if (data && data.success) {\r\n          dispatch(getResetPasswordSuccessAction(data));\r\n        } else {\r\n          dispatch(getRecoveryPasswordFailedAction());\r\n        }\r\n      })\r\n      .catch(() => {\r\n        dispatch(getRecoveryPasswordFailedAction());\r\n      });\r\n  };\r\n","import { TDefaultResponse } from 'utils/types';\r\nimport { signOut } from 'utils/auth';\r\nimport { AppDispatch, AppThunk } from 'utils';\r\nexport const GET_SIGNOUT_SUCCESS: 'GET_SIGNOUT_SUCCESS' = 'GET_SIGNOUT_SUCCESS';\r\nexport const GET_SIGNOUT_REQUEST: 'GET_SIGNOUT_REQUEST' = 'GET_SIGNOUT_REQUEST';\r\nexport const GET_SIGNOUT_FAILED: 'GET_SIGNOUT_FAILED' = 'GET_SIGNOUT_FAILED';\r\nexport interface IGetSignoutRequestAction {\r\n  readonly type: typeof GET_SIGNOUT_REQUEST;\r\n}\r\n\r\nexport interface IGetSignoutSuccessAction {\r\n  readonly type: typeof GET_SIGNOUT_SUCCESS;\r\n  readonly data: TDefaultResponse;\r\n}\r\nexport interface IGetSignoutFailedAction {\r\n  readonly type: typeof GET_SIGNOUT_FAILED;\r\n}\r\nexport type TGetSignoutAction =\r\n  | IGetSignoutRequestAction\r\n  | IGetSignoutSuccessAction\r\n  | IGetSignoutFailedAction;\r\n\r\nexport const getSignoutRequestAction = (): TGetSignoutAction => ({\r\n  type: GET_SIGNOUT_REQUEST,\r\n});\r\n\r\nexport const getSignoutSuccessAction = (data: TDefaultResponse): TGetSignoutAction => ({\r\n  type: GET_SIGNOUT_SUCCESS,\r\n  data,\r\n});\r\n\r\nexport const getSignoutFailedAction = (): TGetSignoutAction => ({\r\n  type: GET_SIGNOUT_FAILED,\r\n});\r\nexport const onSignOut: AppThunk = (token: string) => (dispatch: AppDispatch) => {\r\n  dispatch(getSignoutRequestAction());\r\n  signOut(token)\r\n    .then((data) => {\r\n      if (data && data.success) {\r\n        dispatch(getSignoutSuccessAction(data));\r\n      } else {\r\n        dispatch(getSignoutFailedAction());\r\n      }\r\n      localStorage.removeItem('userName');\r\n      localStorage.removeItem('userEmail');\r\n      localStorage.removeItem('refreshToken');\r\n      localStorage.removeItem('accessToken');\r\n    })\r\n    .catch(() => {\r\n      dispatch(getSignoutFailedAction());\r\n    });\r\n};\r\n","import { onCheckAuth } from './check-auth';\r\nimport { onEditUserInfo } from './edit-profile';\r\nimport { onLogin } from './login';\r\nimport { onRecoveryPassword } from './recovery-password';\r\nimport { onRefreshToken } from './refresh-token';\r\nimport { onRegister } from './register';\r\nimport { onResetPassword } from './reset-password';\r\nimport { onSignOut } from './signout';\r\n\r\nexport const GET_LOGGED_IN: 'GET_LOGGED_IN' = 'GET_LOGGED_IN';\r\nexport const LOADING_END: 'LOADING_END' = 'LOADING_END';\r\nexport const LOADING_START: 'LOADING_START' = 'LOADING_START';\r\n\r\nexport interface IGetLoggedInAction {\r\n  readonly type: typeof GET_LOGGED_IN;\r\n}\r\n\r\nexport interface ILoadingEndAction {\r\n  readonly type: typeof LOADING_END;\r\n}\r\nexport interface ILoadingStartAction {\r\n  readonly type: typeof LOADING_START;\r\n}\r\nexport type TLoadingAction =\r\n  | ILoadingEndAction\r\n  | ILoadingStartAction\r\n  | IGetLoggedInAction;\r\n\r\nexport const getLoadingEndAction = (): TLoadingAction => ({\r\n  type: LOADING_END,\r\n});\r\n\r\nexport const getLoadingStartAction = (): TLoadingAction => ({\r\n  type: LOADING_START,\r\n});\r\n\r\nexport const getLeggedInAction = (): TLoadingAction => ({\r\n  type: GET_LOGGED_IN,\r\n});\r\n\r\nexport {\r\n  onCheckAuth,\r\n  onEditUserInfo,\r\n  onLogin,\r\n  onRecoveryPassword,\r\n  onRefreshToken,\r\n  onRegister,\r\n  onResetPassword,\r\n  onSignOut,\r\n};\r\n","import { getIngredientsRequest } from 'utils/Api';\r\nimport { getLoadingEndAction, getLoadingStartAction } from './auth';\r\nimport { TItem } from 'utils/types';\r\nimport { AppDispatch, AppThunk } from 'utils';\r\nexport const GET_INGREDIENTS_REQUEST: 'GET_INGREDIENTS_REQUEST' =\r\n  'GET_INGREDIENTS_REQUEST';\r\nexport const GET_INGREDIENTS_SUCCESS: 'GET_INGREDIENTS_SUCCESS' =\r\n  'GET_INGREDIENTS_SUCCESS';\r\nexport const GET_INGREDIENTS_FAILED: 'GET_INGREDIENTS_FAILED' =\r\n  'GET_INGREDIENTS_FAILED';\r\nexport interface IGetIngredientsRequestAction {\r\n  readonly type: typeof GET_INGREDIENTS_REQUEST;\r\n}\r\nexport interface IGetIngredientsSuccessAction {\r\n  readonly type: typeof GET_INGREDIENTS_SUCCESS;\r\n  readonly data:  ReadonlyArray<TItem>\r\n}\r\nexport interface IGetIngredientsFailedAction {\r\n  readonly type: typeof GET_INGREDIENTS_FAILED;\r\n}\r\n\r\nexport type TGetIngredients =\r\n  | IGetIngredientsRequestAction\r\n  | IGetIngredientsSuccessAction\r\n  | IGetIngredientsFailedAction;\r\n\r\nexport const getIngredientsRequestAction = (): TGetIngredients => ({\r\n  type: GET_INGREDIENTS_REQUEST,\r\n});\r\n\r\nexport const getIngredientsSuccessAction = (data:  ReadonlyArray<TItem>): TGetIngredients => ({\r\n  type: GET_INGREDIENTS_SUCCESS,\r\n  data,\r\n});\r\nexport const getIngredientsFailedAction = (): TGetIngredients => ({\r\n  type: GET_INGREDIENTS_FAILED,\r\n});\r\n\r\nexport const getIngredients: AppThunk = () => (dispatch: AppDispatch) => {\r\n  dispatch(getLoadingStartAction());\r\n  dispatch(getIngredientsRequestAction());\r\n  getIngredientsRequest()\r\n  .then((data) => {\r\n      if (data && data.success) {\r\n        dispatch(getIngredientsSuccessAction(data.data));\r\n        dispatch(getLoadingEndAction());\r\n      } else {\r\n        dispatch(getIngredientsFailedAction());\r\n      }\r\n    })\r\n    .catch(() => {\r\n      dispatch(getIngredientsFailedAction());\r\n    });\r\n};\r\n","import { BURGER_URL } from './constants';\r\nimport { checkResponse } from 'utils/utils';\r\nconst getIngredientsRequest = () => {\r\n  return fetch(BURGER_URL + 'ingredients').then(checkResponse);\r\n};\r\n\r\nconst sentOrderRequest = (id: string, token: string) => {\r\n  return fetch(`${BURGER_URL}orders`, {\r\n    method: 'POST',\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      Authorization: `Bearer ${token}`,\r\n    },\r\n    body: JSON.stringify({ ingredients: id }),\r\n  }).then(checkResponse);\r\n};\r\n\r\nconst getAllOrders = () => {\r\n  return fetch(`${BURGER_URL}orders/all`).then(checkResponse);\r\n};\r\n\r\nconst getUserOrders = () => {\r\n  return fetch(`${BURGER_URL}orders`).then(checkResponse);\r\n};\r\n\r\nexport { sentOrderRequest, getIngredientsRequest, getAllOrders, getUserOrders };\r\n","import { TFeedOrders } from 'utils/types';\r\n\r\nexport const WS_CONNECTION_START: 'WS_CONNECTION_START' = 'WS_CONNECTION_START';\r\nexport const WS_CONNECTION_START_FOR_USER: 'WS_CONNECTION_START_FOR_USER' =\r\n  'WS_CONNECTION_START_FOR_USER';\r\nexport const WS_CONNECTION_SUCCESS: 'WS_CONNECTION_SUCCESS' =\r\n  'WS_CONNECTION_SUCCESS';\r\nexport const WS_CONNECTION_ERROR: 'WS_CONNECTION_ERROR' = 'WS_CONNECTION_ERROR';\r\nexport const WS_CONNECTION_CLOSED: 'WS_CONNECTION_CLOSED' =\r\n  'WS_CONNECTION_CLOSED';\r\nexport const WS_GET_ORDER: 'WS_GET_MESSAGE' = 'WS_GET_MESSAGE';\r\nexport const WS_SEND_ORDER: 'WS_SEND_MESSAGE' = 'WS_SEND_MESSAGE';\r\nexport const WS_GET_USER_ORDER: 'WS_GET_USER_ORDER' = 'WS_GET_USER_ORDER';\r\n\r\nexport interface IWsConnectionStartAction {\r\n  readonly type: typeof WS_CONNECTION_START;\r\n}\r\nexport interface IWsConnectionStartForUserAction {\r\n  readonly type: typeof WS_CONNECTION_START_FOR_USER;\r\n}\r\nexport interface IWsConnectionSuccessAction {\r\n  readonly type: typeof WS_CONNECTION_SUCCESS;\r\n}\r\nexport interface IWsConnectionClosedAction {\r\n  readonly type: typeof WS_CONNECTION_CLOSED;\r\n}\r\n\r\nexport interface IWsConnectionErrorAction {\r\n  readonly type: typeof WS_CONNECTION_ERROR;\r\n}\r\nexport interface IWsGetOrderAction {\r\n  readonly type: typeof WS_GET_ORDER;\r\n  readonly data: TFeedOrders;\r\n}\r\n\r\nexport interface IWsGetUserOrderAction {\r\n  readonly type: typeof WS_GET_USER_ORDER;\r\n  readonly data: TFeedOrders;\r\n}\r\nexport type TWsFeedAction =\r\n  | IWsConnectionSuccessAction\r\n  | IWsConnectionStartAction\r\n  | IWsConnectionClosedAction\r\n  | IWsConnectionErrorAction\r\n  | IWsGetOrderAction\r\n  | IWsConnectionStartForUserAction\r\n  | IWsGetUserOrderAction;\r\n\r\nexport const wsConnectionStartForUser = (): TWsFeedAction => {\r\n  return {\r\n    type: WS_CONNECTION_START_FOR_USER,\r\n  };\r\n};\r\nexport const wsConnectionStart = (): TWsFeedAction => {\r\n  return {\r\n    type: WS_CONNECTION_START,\r\n  };\r\n};\r\nexport const wsConnectionSuccess = (): TWsFeedAction => {\r\n  return {\r\n    type: WS_CONNECTION_SUCCESS,\r\n  };\r\n};\r\n\r\nexport const wsConnectionError = (): TWsFeedAction => {\r\n  return {\r\n    type: WS_CONNECTION_ERROR,\r\n  };\r\n};\r\n\r\nexport const wsConnectionClosed = (): TWsFeedAction => {\r\n  return {\r\n    type: WS_CONNECTION_CLOSED,\r\n  };\r\n};\r\n\r\nexport const wsGetOrder = (data: TFeedOrders): TWsFeedAction => {\r\n  return {\r\n    type: WS_GET_ORDER,\r\n    data,\r\n  };\r\n};\r\n\r\nexport const wsGetUserOrder = (data: TFeedOrders): TWsFeedAction => {\r\n  return {\r\n    type: WS_GET_USER_ORDER,\r\n    data,\r\n  };\r\n};\r\n","import React, { useEffect, useRef } from 'react';\nimport { IngredientsList } from './ingredients-list/ingredients-list';\nimport burgerIngredientsStyle from './burger-ingredients.module.css';\nimport { Tab } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useDispatch, useSelector } from '../../utils/hooks';\nimport { getIngredients } from 'services/actions/ingredients';\nimport { Link, useLocation } from 'react-router-dom';\nimport { TItem } from 'utils/types';\nimport { wsConnectionClosed } from 'services/actions/wsFeed';\nconst BurgerIngredients = () => {\n\n  const [current, setCurrent] = React.useState('one');\n  const ingredients = useSelector((store) => store.ingredients.ingredients);\n  const russian = localStorage.getItem('rus');\n  const location = useLocation();\n  const dispatch = useDispatch();\n  const bunRef = useRef<HTMLParagraphElement>(null);\n  const sauseRef = useRef<HTMLParagraphElement>(null);\n  const mainRef = useRef<HTMLParagraphElement>(null);\n  const scrollRef = useRef<HTMLDivElement>(null);\n  const { wsConnected } = useSelector((store) => store.wsFeed);\n\n  useEffect(() => {\n    wsConnected && dispatch(wsConnectionClosed());\n  }, [wsConnected, dispatch]);\n\n  const scrollToBun = () => {\n    if (bunRef !== null && bunRef.current !== null) {\n      setCurrent('one');\n      bunRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  const scrollToSause = () => {\n    if (sauseRef !== null && sauseRef.current !== null) {\n      setCurrent('two');\n      sauseRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n  const scrollToMain = () => {\n    if (mainRef !== null && mainRef.current !== null) {\n      setCurrent('three');\n      mainRef.current.scrollIntoView({ behavior: 'smooth' });\n    }\n  };\n\n  useEffect(() => {\n    ingredients.length === 0 && dispatch(getIngredients());\n  }, [dispatch, ingredients.length]);\n\n  const handleScroll = (e: React.UIEvent<HTMLDivElement>): void => {\n    const scrollY = (e.target as HTMLElement).scrollTop;\n    const sauseY = (sauseRef.current as HTMLParagraphElement).offsetTop / 2;\n    const mainY = (mainRef.current as HTMLParagraphElement).offsetTop / 2;\n\n    scrollY > sauseY && scrollY < mainY + sauseY\n      ? setCurrent('two')\n      : scrollY >= mainY + sauseY\n      ? setCurrent('three')\n      : setCurrent('one');\n  };\n\n  return (\n    <section className={`mr-5 ${burgerIngredientsStyle.burgerIngredients}`}>\n      <h1\n        className={`text text_type_main-large pb-5 ${burgerIngredientsStyle.title}`}\n      >\n        {russian ? 'Соберите бургер' : 'Build a burger'}\n      </h1>\n      <div style={{ display: 'flex' }}>\n        <Tab onClick={scrollToBun} value=\"one\" active={current === 'one'}>\n          {russian ? 'Булки' : 'Buns'}\n        </Tab>\n        <Tab onClick={scrollToSause} value=\"two\" active={current === 'two'}>\n          {russian ? 'Соусы' : 'Sauces'}\n        </Tab>\n        <Tab onClick={scrollToMain} value=\"three\" active={current === 'three'}>\n          {russian ? 'Начинки' : 'Main'}\n        </Tab>\n      </div>\n\n      <div\n        onScroll={handleScroll}\n        ref={scrollRef}\n        className={`${burgerIngredientsStyle.container}`}\n      >\n        <p\n          ref={bunRef}\n          className={`text text_type_main-medium mt-10 mb-6 ${burgerIngredientsStyle.subtitle}`}\n        >\n          {russian ? 'Булки' : 'Buns'}\n        </p>\n        <ul id=\"bun\" className={`pb-15 ${burgerIngredientsStyle.list}`}>\n          {ingredients.map((item: TItem) => {\n            if (item.type === 'bun') {\n              return (\n                <Link\n                  style={{ textDecoration: 'none' }}\n                  key={item._id}\n                  to={`/ingredients/${item._id}`}\n                  state={{ background: location.pathname }}\n                >\n                  <IngredientsList\n                    key={item._id}\n                    name={item.name}\n                    price={item.price}\n                    image={item.image}\n                    item={item}\n                  />\n                </Link>\n              );\n            } else {\n              return '';\n            }\n          })}\n        </ul>\n        <div>\n          <p\n            ref={sauseRef}\n            className={`text text_type_main-medium mt-5 mb-5 ${burgerIngredientsStyle.subtitle}`}\n          >\n            {russian ? 'Соусы' : 'Sauces'}\n          </p>\n          <ul className={burgerIngredientsStyle.list}>\n            {ingredients.map((item: TItem) => {\n              if (item.type === 'sauce') {\n                return (\n                  <Link\n                    style={{ textDecoration: 'none' }}\n                    key={item._id}\n                    to={`/ingredients/${item._id}`}\n                    state={{ background: location.pathname }}\n                  >\n                    <IngredientsList\n                      key={item._id}\n                      name={item.name}\n                      price={item.price}\n                      image={item.image}\n                      item={item}\n                    />\n                  </Link>\n                );\n              } else {\n                return '';\n              }\n            })}\n          </ul>\n        </div>\n        <div>\n          <p\n            ref={mainRef}\n            className={`text text_type_main-medium mt-5 mb-5 ${burgerIngredientsStyle.subtitle}`}\n          >\n            {russian ? 'Начинки' : 'Main'}\n          </p>\n          <ul className={burgerIngredientsStyle.list}>\n            {ingredients.map((item: TItem) => {\n              if (item.type === 'main') {\n                return (\n                  <Link\n                    style={{ textDecoration: 'none' }}\n                    key={item._id}\n                    to={`/ingredients/${item._id}`}\n                    state={{ background: location.pathname }}\n                  >\n                    <IngredientsList\n                      key={item._id}\n                      name={item.name}\n                      price={item.price}\n                      image={item.image}\n                      item={item}\n                    />\n                  </Link>\n                );\n              } else {\n                return '';\n              }\n            })}\n          </ul>\n        </div>\n      </div>\n    </section>\n  );\n};\n\nexport { BurgerIngredients };\n","import React, { FC, ReactNode } from 'react';\r\nimport modalOverlayStyle from './modal-overlay.module.css';\r\n\r\nconst ModalOverlay: FC<{ onClick: () => void; children: ReactNode }> = ({\r\n  onClick,\r\n  children,\r\n}) => {\r\n  return (\r\n    <div onClick={onClick} className={`${modalOverlayStyle.overlay}`}>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\nexport { ModalOverlay };\r\n","import React, { FC, ReactNode, useEffect } from 'react';\nimport modalStyle from './modal.module.css';\nimport { CloseIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { ModalOverlay } from './modal-overlay/modal-overlay';\nimport { createPortal } from 'react-dom';\n\nconst Modal: FC<{\n  onClose: () => void;\n  title: string;\n  children: ReactNode;\n  isLoading?: boolean;\n}> = ({ onClose, title, children, isLoading }) => {\n  useEffect(() => {\n    function onEscClose(e: KeyboardEvent): void {\n      if (e.key === 'Escape' && !isLoading) {\n        onClose();\n      }\n    }\n    window.addEventListener('keydown', onEscClose);\n    return () => window.removeEventListener('keydown', onEscClose);\n  }, [onClose, isLoading]);\n\n  return createPortal(\n    <ModalOverlay onClick={onClose}>\n      <div className={modalStyle.modal} onClick={(e) => e.stopPropagation()}>\n        {title && (\n          <h2 className={'pb-4 ml-10 pt-15 text text_type_main-large'}>\n            {title}\n          </h2>\n        )}\n        {children}\n        <button className={`${modalStyle.button}`} onClick={onClose}>\n          {!isLoading && <CloseIcon type={'secondary'} />}\n        </button>\n      </div>\n    </ModalOverlay>,\n    document.getElementById('modal')!\n  );\n};\nexport { Modal };\n","import {  TItem } from 'utils/types';\r\nexport const ADD_INGREDIENT: 'ADD_INGREDIENT' = 'ADD_INGREDIENT';\r\nexport const DELETE_INGREDIENT: 'DELETE_INGREDIENT' = 'DELETE_INGREDIENT';\r\nexport const DELETE_ALL_INGREDIENTS: 'DELETE_ALL_INGREDIENTS' =\r\n  'DELETE_ALL_INGREDIENTS';\r\nexport const MOVE_INGREDIENT: 'MOVE_INGREDIENT' = 'MOVE_INGREDIENT';\r\n\r\nexport interface IAddIngredients {\r\n  readonly type: typeof ADD_INGREDIENT;\r\n  readonly newItem: TItem;\r\n}\r\nexport interface IDeleteIngredient {\r\n  readonly type: typeof DELETE_INGREDIENT;\r\n  readonly item: string;\r\n}\r\nexport interface IDeleteAllIngredients {\r\n  readonly type: typeof DELETE_ALL_INGREDIENTS;\r\n}\r\nexport interface IMoveIngredients {\r\n  readonly type: typeof MOVE_INGREDIENT;\r\n  readonly newConstructor: TItem[];\r\n}\r\n\r\nexport type TConsctructorAction =\r\n  | IAddIngredients\r\n  | IDeleteIngredient\r\n  | IDeleteAllIngredients\r\n  | IMoveIngredients;\r\n\r\nexport const getAddIngredientsAction = (\r\n  newItem: TItem\r\n): TConsctructorAction => ({\r\n  type: ADD_INGREDIENT,\r\n  newItem,\r\n});\r\n\r\nexport const getMoveIngredientsAction = (newConstructor: TItem[]): TConsctructorAction => ({\r\n  type: MOVE_INGREDIENT,\r\n  newConstructor\r\n});\r\n\r\nexport const getDeleteIngredientAction = (\r\n  item: string\r\n): TConsctructorAction => ({\r\n  type: DELETE_INGREDIENT,\r\n  item,\r\n});\r\n\r\nexport const getDeleteAllIngredientsAction = (): TConsctructorAction => ({\r\n  type: DELETE_ALL_INGREDIENTS,\r\n});\r\n","import React, { FC, useRef } from 'react';\r\nimport ConstructorFoodElementStyle from './constructorFoodElement.module.css';\r\nimport {\r\n  DragIcon,\r\n  ConstructorElement,\r\n} from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { useDispatch, useSelector } from '../../../utils/hooks';\r\nimport { useDrag, useDrop } from 'react-dnd';\r\nimport { getDeleteIngredientAction } from 'services/actions/constructor';\r\nimport { TItem } from 'utils/types';\r\nconst ConstructorFoodElement: FC<{\r\n  moveIngredient: (dragIndex: number, hoverIndex: number) => void;\r\n  index: number;\r\n  item: TItem;\r\n}> = ({ moveIngredient, index, item }) => {\r\n  const sortTarget = useRef<HTMLDivElement>(null);\r\n  const dispatch = useDispatch();\r\n  const constructorValue = useSelector(\r\n    (store) => store.constructorValue.constructor.other\r\n  );\r\n\r\n  const [{ opacity }, drop] = useDrop(\r\n    () => ({\r\n      accept: 'sort',\r\n      hover: (item: { _id: string }) => {\r\n        const dragIndex = constructorValue.findIndex(\r\n          (element: { _id: string }) => element._id === item._id\r\n        );\r\n        const hoverIndex = index;\r\n        moveIngredient(dragIndex, hoverIndex);\r\n      },\r\n      collect: (monitor) => ({\r\n        opacity: monitor.isOver() ? 0.2 : 1,\r\n      }),\r\n    }),\r\n\r\n    [constructorValue]\r\n  );\r\n\r\n  const [, drag] = useDrag({\r\n    type: 'sort',\r\n    item: item,\r\n    collect: (monitor) => ({\r\n      isDragging: monitor.isDragging(),\r\n    }),\r\n  });\r\n  drag(drop(sortTarget));\r\n\r\n  return (\r\n    <div\r\n      style={{ opacity }}\r\n      ref={sortTarget}\r\n      key={index}\r\n      className={ConstructorFoodElementStyle.ingredient}\r\n    >\r\n      <DragIcon type={'secondary'} />\r\n      <ConstructorElement\r\n        handleClose={() => {\r\n          dispatch(getDeleteIngredientAction(item._id + index));\r\n        }}\r\n        text={item.name}\r\n        price={item.price}\r\n        thumbnail={item.image}\r\n      />\r\n    </div>\r\n  );\r\n};\r\nexport { ConstructorFoodElement };\r\n","export default __webpack_public_path__ + \"static/media/done.cc5a59a7.gif\";","import React, { FC } from 'react';\r\nimport orderDetails from './order-details.module.css';\r\nimport done from 'images/done.gif';\r\n\r\nconst OrderDeatils: FC<{ number: string | number; name: string }> = ({\r\n  number,\r\n  name,\r\n}) => {\r\n  const russian = localStorage.getItem('rus');\r\n  return (\r\n    <div className={`pb-30 ${orderDetails.container}`}>\r\n      <p className={'text text_type_digits-large pt-30'}>{number}</p>\r\n      <p className={`text text_type_main-medium pt-8 ${orderDetails.name}`}>\r\n        {name}\r\n      </p>\r\n      <img\r\n        src={done}\r\n        alt={russian ? 'Заказ готов' : 'The order is ready'}\r\n        className={`pt-15 ${orderDetails.image}`}\r\n      />\r\n      <p className={'text text_type_main-small pt-15'}>\r\n        {russian\r\n          ? 'Ваш заказ начали готовить'\r\n          : 'Your order is beeing prepared'}\r\n      </p>\r\n      <p className={'text text_type_main-small text_color_inactive pt-2'}>\r\n        {russian\r\n          ? 'Дождитесь готовности на орбитальной станции'\r\n          : 'Wait till its ready at the orbital station'}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\nexport { OrderDeatils };\r\n","export const OPEN_MODAL_ORDER: 'OPEN_MODAL_ORDER' = 'OPEN_MODAL_ORDER';\r\nexport const CLOSE_MODAL_ORDER: 'CLOSE_MODAL_ORDER' = 'CLOSE_MODAL_ORDER';\r\nexport const OPEN_MODAL_INGREDIENT: 'OPEN_MODAL_INGREDIENT' =\r\n  'OPEN_MODAL_INGREDIENT';\r\nexport const CLOSE_MODAL_INGREDIENT: 'CLOSE_MODAL_INGREDIENT' =\r\n  'CLOSE_MODAL_INGREDIENT';\r\n\r\nexport interface IOpenOrderModalAction {\r\n  readonly type: typeof OPEN_MODAL_ORDER;\r\n}\r\nexport interface IOpenIngredientModalAction {\r\n  readonly type: typeof OPEN_MODAL_INGREDIENT;\r\n}\r\nexport interface ICloseIngredientModalAction {\r\n  readonly type: typeof CLOSE_MODAL_INGREDIENT;\r\n}\r\nexport interface ICloseOrderModalAction {\r\n  readonly type: typeof CLOSE_MODAL_ORDER;\r\n}\r\nexport type TOpenModals =\r\n  | IOpenOrderModalAction\r\n  | IOpenIngredientModalAction\r\n  | ICloseIngredientModalAction\r\n  | ICloseOrderModalAction;\r\n\r\nexport const getOpenOrderModalAction = (): TOpenModals => ({\r\n  type: OPEN_MODAL_ORDER,\r\n});\r\nexport const getOpenIngredientModalAction = (): TOpenModals => ({\r\n  type: OPEN_MODAL_INGREDIENT,\r\n});\r\nexport const getCloseIngredientModalAction = (): TOpenModals => ({\r\n  type: CLOSE_MODAL_INGREDIENT,\r\n});\r\nexport const getCloseOrderModalAction = (): TOpenModals => ({\r\n  type: CLOSE_MODAL_ORDER,\r\n});\r\n","import { sentOrderRequest } from 'utils/Api';\r\nimport { getOpenOrderModalAction } from './modal';\r\nimport { getDeleteAllIngredientsAction } from './constructor';\r\nimport { TOrder } from 'utils/types';\r\nimport { AppDispatch, AppThunk } from 'utils';\r\n\r\nexport const GET_ORDER_REQUEST: 'GET_ORDER_REQUEST' = 'GET_ORDER_REQUEST';\r\nexport const GET_ORDER_SUCCESS: 'GET_ORDER_SUCCESS' = 'GET_ORDER_SUCCESS';\r\nexport const GET_ORDER_FAILED: 'GET_ORDER_FAILED' = 'GET_ORDER_FAILED';\r\n\r\nexport interface IGetOrderRequestAction {\r\n  readonly type: typeof GET_ORDER_REQUEST;\r\n}\r\nexport interface IGetOrderSuccessAction {\r\n  readonly type: typeof GET_ORDER_SUCCESS;\r\n  readonly data: TOrder;\r\n}\r\nexport interface IGetOrderFailedAction {\r\n  readonly type: typeof GET_ORDER_FAILED;\r\n}\r\nexport type TGetOrder =\r\n  | IGetOrderRequestAction\r\n  | IGetOrderSuccessAction\r\n  | IGetOrderFailedAction;\r\n\r\nexport const getGetOrderRequestAction = (): TGetOrder => ({\r\n  type: GET_ORDER_REQUEST,\r\n});\r\nexport const getGetOrderSuccessAction = (data: TOrder): TGetOrder => ({\r\n  type: GET_ORDER_SUCCESS,\r\n  data,\r\n});\r\nexport const getGetOrderFailedAction = (): TGetOrder => ({\r\n  type: GET_ORDER_FAILED,\r\n});\r\nexport const createOrder: AppThunk =\r\n  (id: string, token: string) => (dispatch: AppDispatch) => {\r\n    dispatch(getGetOrderRequestAction());\r\n    dispatch(getOpenOrderModalAction());\r\n    sentOrderRequest(id, token)\r\n      .then((data) => {\r\n        if (data && data.success) {\r\n          dispatch(getGetOrderSuccessAction(data));\r\n\r\n          dispatch(getDeleteAllIngredientsAction());\r\n        } else {\r\n          dispatch(getGetOrderFailedAction());\r\n        }\r\n      })\r\n      .catch(() => {\r\n        dispatch(getGetOrderFailedAction());\r\n      });\r\n  };\r\n","import React, { useCallback } from 'react';\nimport burgerConstructorStyle from './burger-constructor.module.css';\nimport { Modal } from 'components/modal/modal';\nimport { ConstructorFoodElement } from './constructorElement/constructorFoodElement';\nimport { OrderDeatils } from '../order-details/order-detail';\nimport { useDispatch, useSelector } from '../../utils/hooks';\nimport { createOrder } from 'services/actions/order';\nimport { getCloseOrderModalAction } from 'services/actions/modal';\nimport { useDrop } from 'react-dnd';\nimport {\n  ConstructorElement,\n  CurrencyIcon,\n  Button,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport {\n  getAddIngredientsAction,\n  getMoveIngredientsAction,\n} from 'services/actions/constructor';\nimport { useNavigate } from 'react-router';\nimport { TItem } from 'utils/types';\nconst BurgerConstructor = () => {\n  const russian = localStorage.getItem('rus');\n  const constructorValue = useSelector(\n    (store) => store.constructorValue.constructor\n  );\n  const loggedIn = useSelector((store) => store.auth.loggedIn);\n  const { isModalOpen, isOrder } = useSelector((store) => store.modal);\n  const { order, orderSuccess, orderRequest } = useSelector(\n    (store) => store.order\n  );\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  function finishOrder() {\n    const accessToken = localStorage.getItem('accessToken');\n    loggedIn\n      ? dispatch(createOrder(orderIdentificators(), accessToken))\n      : navigate('/login');\n  }\n  function orderIdentificators() {\n    const arr = [constructorValue.bun[0]._id];\n    for (let i = 0; i < constructorValue.other.length; i++) {\n      arr.push(constructorValue.other[i]._id);\n    }\n    arr.push(constructorValue.bun[0]._id);\n    return arr;\n  }\n\n  function handleCloseModal() {\n    orderSuccess && dispatch(getCloseOrderModalAction());\n  }\n\n  function totalSum() {\n    const sum = constructorValue.other.reduce(\n      (acc: number, item: { price: number }) => {\n        return acc + item.price;\n      },\n      0\n    );\n    return sum + constructorValue.bun[0].price * 2;\n  }\n\n  const [, dropTarget] = useDrop(\n    () => ({\n      accept: ['bun', 'sauce', 'main'],\n      drop(item: TItem) {\n        dispatch(getAddIngredientsAction(item));\n      },\n    }),\n    [constructorValue]\n  );\n\n  const moveIngredient = useCallback(\n    (dragIndex, hoverIndex) => {\n      const dragIngredient = constructorValue.other[dragIndex];\n      const newConstructor = [...constructorValue.other];\n      newConstructor.splice(dragIndex, 1);\n      newConstructor.splice(hoverIndex, 0, dragIngredient);\n      dragIndex !== hoverIndex &&\n        dispatch(getMoveIngredientsAction(newConstructor));\n    },\n    [dispatch, constructorValue]\n  );\n\n  return (\n    <section\n      ref={dropTarget}\n      className={`pt-15 ${burgerConstructorStyle.burgerConstructor}`}\n    >\n      <div\n        className={`${burgerConstructorStyle.constructor} ${\n          constructorValue.bun.length === 0 &&\n          constructorValue.other.length === 0 &&\n          burgerConstructorStyle.empty\n        }`}\n      >\n        {constructorValue.bun.length === 0 &&\n          constructorValue.other.length === 0 && (\n            <p className={`text text_type_main-medium`}>\n              {russian ? 'Добавьте ингредиенты' : 'Add ingredients'}\n            </p>\n          )}\n        <div className={burgerConstructorStyle.bun}>\n          {constructorValue.bun.map((item: TItem, index: number) => {\n            return (\n              <div\n                key={String(item._id) + index}\n                className={burgerConstructorStyle.ingredient}\n              >\n                <ConstructorElement\n                  type=\"top\"\n                  isLocked={true}\n                  text={`${item.name} (верх)`}\n                  price={item.price}\n                  thumbnail={item.image}\n                />\n              </div>\n            );\n          })}\n        </div>\n        {\n          <div className={burgerConstructorStyle.container}>\n            {constructorValue.other.map((item: TItem, index: number) => {\n              return (\n                <ConstructorFoodElement\n                  item={item}\n                  key={index}\n                  index={index}\n                  moveIngredient={moveIngredient}\n                />\n              );\n            })}\n          </div>\n        }\n        <div className={burgerConstructorStyle.ingredient}>\n          {constructorValue.bun.map((item: TItem, index: number) => {\n            return (\n              <div\n                key={String(item._id) + index}\n                className={burgerConstructorStyle.ingredient}\n              >\n                <ConstructorElement\n                  type=\"bottom\"\n                  isLocked={true}\n                  text={`${item.name} (низ)`}\n                  price={item.price}\n                  thumbnail={item.image}\n                />\n              </div>\n            );\n          })}\n        </div>\n      </div>\n      <div className={burgerConstructorStyle.sum}>\n        <p className=\"text text_type_main-large mr-5\">\n          {constructorValue.bun.length > 0 &&\n            constructorValue.other.length > 0 &&\n            totalSum()}\n          <CurrencyIcon type=\"primary\" />\n        </p>\n        {constructorValue.bun.length > 0 &&\n        constructorValue.other.length > 0 ? (\n          <Button onClick={finishOrder} type=\"primary\" size=\"large\">\n            Оформить заказ\n          </Button>\n        ) : (\n          <Button disabled onClick={finishOrder} type=\"primary\" size=\"large\">\n            {russian ? 'Соберите бургер!' : 'Build a burger!'}\n          </Button>\n        )}\n      </div>\n      {isModalOpen && isOrder && orderSuccess && !orderRequest ? (\n        <Modal onClose={handleCloseModal} title={''}>\n          <OrderDeatils name={order.name} number={order.order.number} />\n        </Modal>\n      ) : (\n        orderRequest && (\n          <Modal onClose={handleCloseModal} title={''} isLoading={true}>\n            <OrderDeatils\n              name={\n                russian\n                  ? 'Подтверждаем заказ. Обычно это занимает 15 секунд'\n                  : 'Confirming the order. Usually it takes 15 seconds.'\n              }\n              number={''}\n            />\n          </Modal>\n        )\n      )}\n    </section>\n  );\n};\nexport { BurgerConstructor };\n","import React from 'react';\r\nimport mainStyle from './main.module.css';\r\nimport { BurgerIngredients } from 'components/burger-ingredients/burger-ingredients';\r\nimport { BurgerConstructor } from 'components/burger-constructor/burger-constructor';\r\nimport { DndProvider } from 'react-dnd';\r\nimport { HTML5Backend } from 'react-dnd-html5-backend';\r\n\r\nfunction Main() {\r\n  return (\r\n    <main className={mainStyle.main}>\r\n      <DndProvider backend={HTML5Backend}>\r\n        <BurgerIngredients />\r\n        <BurgerConstructor />\r\n      </DndProvider>\r\n    </main>\r\n  );\r\n}\r\n\r\nexport default Main;\r\n","import React, { FC, ReactNode } from 'react';\r\nimport headerButtonStyle from './header-button.module.css';\r\nimport { useNavigate, useLocation } from 'react-router-dom';\r\nconst HeaderButton: FC<{ children: ReactNode; name: string; link: string }> = ({\r\n  children,\r\n  name,\r\n  link,\r\n}) => {\r\n  const navigate = useNavigate();\r\n  const location = useLocation();\r\n  return (\r\n    <div\r\n      style={\r\n        location.pathname === link || location.pathname === link + '/orders'\r\n          ? { opacity: 1 }\r\n          : { opacity: 0.6 }\r\n      }\r\n      onClick={() => {\r\n        navigate(link);\r\n      }}\r\n      className={headerButtonStyle.button}\r\n    >\r\n      {children}\r\n      <p className=\"ml-2 text text_type_main-default\">{name}</p>\r\n    </div>\r\n  );\r\n};\r\nexport { HeaderButton };\r\n","import React from 'react';\nimport { HeaderButton } from './header-button/header-button';\nimport headerStyles from './header.module.css';\nimport {\n  Logo,\n  BurgerIcon,\n  ListIcon,\n  ProfileIcon,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useNavigate } from 'react-router';\n\nconst AppHeader = () => {\n  const navigate = useNavigate()\n  const russian = localStorage.getItem('rus');\n\n  function switchToEnglish() {\n    if (localStorage.getItem('rus')) {\n      localStorage.removeItem('rus');\n      localStorage.setItem('eng', 'eng');\n      navigate('/react-burger')\n    }\n  }\n  function switchToRussian() {\n    if (localStorage.getItem('eng')) {\n      localStorage.removeItem('eng');\n      localStorage.setItem('rus', 'rus');\n      navigate('/react-burger')\n    }\n  }\n  return (\n    <header className={headerStyles.header}>\n      <nav className={headerStyles.navigation}>\n        <HeaderButton link=\"/react-burger\" name={russian ? 'Конструктор' : 'Constructor'}>\n          <BurgerIcon type=\"primary\" />\n        </HeaderButton>\n\n        <HeaderButton link=\"/feed\"  name={russian ? 'Лента заказов' : 'Order feed'}>\n\n          <ListIcon type=\"primary\" />\n        </HeaderButton>\n        <a\n          className={headerStyles.logo}\n          href=\"https://nikih449.github.io/react-burger/\"\n        >\n          <Logo />\n        </a>\n        <HeaderButton\n          link=\"/profile\"\n          name={russian ? 'Личный кабинет' : 'My account'}\n        >\n          <ProfileIcon type=\"primary\" />\n        </HeaderButton>\n      </nav>\n      <button\n      style={russian ? { opacity: 1 } : { opacity: 0.6 }}\n        onClick={switchToRussian}\n        className={`text_type_main-default ${headerStyles.languageButton}`}\n      >\n        RU\n      </button>\n      <button\n        style={russian ? { opacity: 0.6 } : { opacity: 1 }}\n        onClick={switchToEnglish}\n        className={`text_type_main-default ${headerStyles.languageButton}`}\n      >\n        EN\n      </button>\n    </header>\n  );\n};\n\nexport { AppHeader };\n","import React from 'react';\r\nimport preloaderStyle from './preloader.module.css';\r\nconst Preloader = () => {\r\n  const russian = localStorage.getItem('rus');\r\n  return (\r\n    <div className={preloaderStyle.preloader}>\r\n      <p className=\"text text_type_main-large\">\r\n        {russian ? 'Загрузка' : 'LOADING'}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { Preloader };\r\n","import React from 'react';\r\nimport notFoundStyles from './not-found.module.css';\r\nconst NotFound = () => {\r\n  const russian = localStorage.getItem('rus');\r\n  return (\r\n    <div className={notFoundStyles.notFound}>\r\n      <h2 className=\"text text_type_main-large\">\r\n        {russian ? 'Упс!' : ' Oops!'}\r\n      </h2>\r\n      <p className=\"text text_type_main-medium\">\r\n        {russian ? '404 - страница не найдена.' : ' 404 - page not found.'}\r\n      </p>\r\n      <p className=\"text text_type_main-default\">\r\n        {russian\r\n          ? 'Страница которую вы ищете, возможно, была удалена или временно недоступна.'\r\n          : 'The page you looking for might have been deleted or temporaly unavailable '}\r\n      </p>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport { NotFound };\r\n","import React, { FC, ReactElement } from 'react';\r\nimport { useSelector } from '../../utils/hooks';\r\nimport { useLocation } from 'react-router-dom';\r\nimport { Navigate } from 'react-router';\r\n\r\nconst ProtectedRoute: FC<{ children: ReactElement}> = ({ children }) => {\r\n  const location = useLocation();\r\n  const loggedIn = useSelector((store) => store.auth.loggedIn);\r\n  return loggedIn === true ? (\r\n    children\r\n  ) : (\r\n    <Navigate to=\"/login\" state={{ path: location.pathname }} />\r\n  );\r\n};\r\nexport { ProtectedRoute };\r\n","import React, { FC, FormEventHandler, ReactNode } from 'react';\r\nimport authFormStyle from './auth-form.module.css';\r\nimport { Button } from '@ya.praktikum/react-developer-burger-ui-components';\r\nimport { Link, useLocation } from 'react-router-dom';\r\n\r\nexport const AuthForm: FC<{\r\n  onSubmit: FormEventHandler | undefined;\r\n  title: string;\r\n  children: ReactNode;\r\n  button: string;\r\n  question: string;\r\n  questionLink: string;\r\n  recovery: string;\r\n  recoveryLink: string;\r\n}> = ({\r\n  onSubmit,\r\n  title,\r\n  children,\r\n  button,\r\n  question,\r\n  questionLink,\r\n  recovery,\r\n  recoveryLink,\r\n}) => {\r\n\r\n  const location = useLocation();\r\n  return (\r\n    <section className={authFormStyle.auth}>\r\n      <form onSubmit={onSubmit} className={authFormStyle.form}>\r\n        <div className={authFormStyle.container}>\r\n          <p className={`text text_type_main-medium ${authFormStyle.title}`}>\r\n            {title}\r\n          </p>\r\n          <div className={`mb-6 ${authFormStyle.inputContainer}`}>\r\n            {children}\r\n          </div>\r\n          <div className={authFormStyle.button}>\r\n            <Button type=\"primary\" size=\"medium\">\r\n              {button}\r\n            </Button>\r\n          </div>\r\n        </div>\r\n        <div>\r\n          <p\r\n            className={`mb-4 text text_type_main-default text_color_inactive ${authFormStyle.paragraph}`}\r\n          >\r\n            {question}{' '}\r\n            <Link\r\n              className={authFormStyle.link}\r\n              to={location.pathname === '/login' ? '/register' : '/login'}\r\n            >\r\n              {questionLink}\r\n            </Link>\r\n          </p>\r\n          <p\r\n            className={`mb-4 text text_type_main-default text_color_inactive ${authFormStyle.paragraph}`}\r\n          >\r\n            {recovery}{' '}\r\n            <Link\r\n              className={authFormStyle.link}\r\n              to={\r\n                location.pathname === '/login' ? '/forgot-password' : '/login'\r\n              }\r\n            >\r\n              {recoveryLink}\r\n            </Link>\r\n          </p>\r\n        </div>\r\n      </form>\r\n    </section>\r\n  );\r\n};\r\n","import React, { useEffect, useState, FC } from 'react';\nimport { AuthForm } from 'components/auth-form/auth-form';\nimport { onLogin } from 'services/actions/auth';\nimport {\n  PasswordInput,\n  Input,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport '../index.css';\nimport { useDispatch, useSelector } from '../utils/hooks';\nimport { useLocation, useNavigate } from 'react-router';\nconst Login: FC = () => {\n  const russian = localStorage.getItem('rus');\n  const { state } = useLocation();\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const { accessToken, refreshToken, loginSuccess, loginFailed, loggedIn } =\n    useSelector((store) => store.auth);\n\n  function handleChangeEmail(e: React.ChangeEvent<HTMLInputElement>): void {\n    setEmail(e.target.value);\n  }\n\n  function handleChangePassword(e: React.ChangeEvent<HTMLInputElement>): void {\n    setPassword(e.target.value);\n  }\n\n  function signIn(e: { preventDefault: () => void }) {\n    e.preventDefault();\n    dispatch(onLogin(email, password));\n  }\n\n  useEffect(() => {\n    if (loginSuccess) {\n      localStorage.setItem('accessToken', accessToken);\n      localStorage.setItem('refreshToken', refreshToken);\n      navigate(state?.path || '/react-burger');\n      setEmail('');\n      setPassword('');\n    }\n  }, [\n    loginSuccess,\n    refreshToken,\n    password,\n    accessToken,\n    navigate,\n    state?.path,\n  ]);\n\n  useEffect(() => {\n    if (loggedIn === true) {\n      navigate('/profile');\n    }\n  }, [loggedIn, navigate]);\n\n  return (\n    <AuthForm\n      title={russian ? 'Вход' : 'Sign in'}\n      button={'Sig in'}\n      question={russian ? 'Вы — новый пользователь?' : 'A new user?'}\n      recovery={russian ? 'Забыли пароль?' : 'Forgot password?'}\n      questionLink={russian ? 'Зарегистрироваться' : 'Sign up'}\n      recoveryLink={russian ? 'Восстановить пароль' : 'Recover password'}\n      onSubmit={signIn}\n    >\n      <div className=\"mb-6 mt-6\">\n        <Input\n          onChange={handleChangeEmail}\n          value={email}\n          placeholder={'E-mail'}\n          type={'email'}\n          size={'default'}\n        />\n      </div>\n      <div>\n        <PasswordInput\n          value={password}\n          onChange={handleChangePassword}\n          size={'default'}\n          name={''}\n        />\n      </div>\n\n      {loginFailed && (\n        <p className=\"mt-5 text text_type_main-small\">\n          {russian\n            ? 'Ошибка. Возможно логин или пароль ошибочны.'\n            : 'Oops. There is a problem with login or password.'}\n        </p>\n      )}\n    </AuthForm>\n  );\n};\nexport { Login };\n","import React, { FC } from 'react';\r\nimport ingredientDetailsStyle from './ingredient-details.module.css';\r\nconst IngredientDetails: FC<{\r\n  image: string;\r\n  name: string;\r\n  calories: number;\r\n  proteins: number;\r\n  fat: number;\r\n  carbohydrates: number;\r\n}> = ({ image, name, calories, proteins, fat, carbohydrates }) => {\r\n\r\n    const russian = localStorage.getItem('rus');\r\n\r\n  return (\r\n    <div className={`pt-15 pb-15 ${ingredientDetailsStyle.ingredientDetails}`}>\r\n      <img src={image} alt={name} className={ingredientDetailsStyle.image} />\r\n      <p\r\n        className={`text text_type_main-medium pt-4 ${ingredientDetailsStyle.name}`}\r\n      >\r\n        {name}\r\n      </p>\r\n      <ul className={`pt-8 ${ingredientDetailsStyle.list}`}>\r\n        <li className={'mr-5'}>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            {russian ? 'Калории,ккал' : 'Calories'}\r\n          </p>\r\n          <p className=\"text text_type_digits-default text_color_inactive\">\r\n            {calories}\r\n          </p>\r\n        </li>\r\n        <li className={'mr-5'}>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            {russian ? 'Белки, г' : 'Proteins'}\r\n          </p>\r\n          <p className=\"text text_type_digits-default text_color_inactive\">\r\n            {proteins}\r\n          </p>\r\n        </li>\r\n        <li className={'mr-5'}>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            {russian ? ' Жиры, г' : 'Fat'}\r\n          </p>\r\n          <p className=\"text text_type_digits-default text_color_inactive\">\r\n            {fat}\r\n          </p>\r\n        </li>\r\n        <li className={'mr-5'}>\r\n          <p className=\"text text_type_main-default text_color_inactive\">\r\n            {russian ? ' Углеводы, г' : 'Carbohydrates'}\r\n          </p>\r\n          <p className=\"text text_type_digits-default text_color_inactive\">\r\n            {carbohydrates}\r\n          </p>\r\n        </li>\r\n      </ul>\r\n    </div>\r\n  );\r\n};\r\nexport { IngredientDetails };\r\n","import React from 'react';\nimport { useDispatch, useSelector } from '../utils/hooks';\nimport ingredientStyles from './ingredient.module.css';\nimport { IngredientDetails } from 'components/ingredient-details/ingredient-details';\nimport { useLocation, useNavigate, useParams } from 'react-router';\nimport { Modal } from 'components/modal/modal';\nimport Main from 'components/main/main';\n\nimport { getCloseIngredientModalAction } from 'services/actions/modal';\nconst Ingredient = () => {\n  const currentId = useParams();\n  const { state } = useLocation();\n  const russian = localStorage.getItem('rus');\n  const navigate = useNavigate();\n  const ingredients = useSelector(\n    (store) => store.ingredients.ingredients\n  );\n  const ingredient = ingredients.filter(\n    (item: { _id: string }) => currentId.id === item._id\n  )[0];\n  const dispatch = useDispatch();\n\n  function handleCloseModal() {\n    dispatch(getCloseIngredientModalAction());\n    navigate('/react-burger');\n  }\n  return (\n    <>\n      {state && <Main></Main>}\n      {state && ingredient ? (\n\n        <Modal\n          title={russian ? 'Детали ингридиента' : 'Details of ingredient'}\n          onClose={handleCloseModal}\n          isLoading={false}\n        >\n\n          <IngredientDetails\n            name={ingredient.name}\n            image={ingredient.image}\n            calories={ingredient.calories}\n            carbohydrates={ingredient.carbohydrates}\n            fat={ingredient.fat}\n            proteins={ingredient.proteins}\n          ></IngredientDetails>\n        </Modal>\n      ) : (\n        <div className={ingredientStyles.ingredient}>\n          {ingredient && (\n            <>\n              <h2 className={'pb-4 pt-30 text text_type_main-large'}>\n              {russian ? 'Детали ингридиента' : 'Details of ingredient'}\n              </h2>\n              <IngredientDetails\n                name={ingredient.name}\n                image={ingredient.image}\n                calories={ingredient.calories}\n                carbohydrates={ingredient.carbohydrates}\n                fat={ingredient.fat}\n                proteins={ingredient.proteins}\n              ></IngredientDetails>\n            </>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\n\nexport { Ingredient };\n","import React, { FC, MouseEventHandler, ReactNode } from 'react';\r\nimport { useLocation } from 'react-router';\r\nimport { NavLink } from 'react-router-dom';\r\nimport profileButtonStyle from './profile-button.module.css';\r\nconst ProfileButton: FC<{\r\n  link: string;\r\n  onSignOut: MouseEventHandler<HTMLDivElement> | undefined;\r\n  title: string;\r\n  children: ReactNode;\r\n}> = ({ link, onSignOut, title, children }) => {\r\n  const location = useLocation();\r\n\r\n  return (\r\n    <NavLink\r\n      className={profileButtonStyle.link}\r\n      style={location.pathname === link ? { opacity: 1 } : { opacity: 0.6 }}\r\n      to={link && link}\r\n    >\r\n      <div onClick={onSignOut} className={profileButtonStyle.button}>\r\n        {children}\r\n        <p className=\"text text_type_main-medium\">{title}</p>\r\n      </div>\r\n    </NavLink>\r\n  );\r\n};\r\nexport { ProfileButton };\r\n","import { CurrencyIcon } from '@ya.praktikum/react-developer-burger-ui-components';\nimport React, { FC } from 'react';\nimport { useSelector } from '../../utils/hooks';\nimport feedOrderStyle from './feed-order.module.css';\nimport { TItem } from '../../utils/types';\nimport { Link } from 'react-router-dom';\nimport { useLocation } from 'react-router';\n\nconst FeedOrder: FC<{\n  id: string;\n  number: string;\n  date: string;\n  name: string;\n  status: string;\n  ingredients: TItem[] | string[];\n}> = ({ number, date, name, ingredients, id, status }) => {\n  const location = useLocation();\n  const russian = localStorage.getItem('rus');\n  const allIngredients = useSelector((store) => store.ingredients.ingredients);\n  const orderIngredients = findIngredients();\n  const imageStyle = (item: string, key: number) => ({\n    backgroundImage: 'url(' + item + ')',\n    backgroundPosition: 'center',\n    zIndex: 999 - key,\n  });\n\n  function parseDate(date: string) {\n    const currentDate = new Date();\n    const regex = /-/g;\n    const orderDay = Number(date.replace(regex, '').split('T')[0].slice(-2));\n    const orderTime = date.slice(11, -8);\n    const term = currentDate.getDate() - orderDay;\n    return term === 0\n      ? `${russian ? 'Cегодня' : 'Today'}, ${orderTime} i-GMT+3`\n      : term === 1\n      ? `${russian ? 'Вчера' : 'Yesterday'}, ${orderTime} i-GMT+3`\n      : term < 5\n      ? `${term} ${russian ? 'дня назад' : 'days ago'}, ${orderTime} i-GMT+3`\n      : `${term} ${russian ? 'дней назад' : 'days ago'}, ${orderTime} i-GMT+3`;\n  }\n\n  function findIngredients() {\n    let orderIngredients = [];\n    for (let i = 0; i < ingredients.length; i++) {\n      orderIngredients.push(\n        allIngredients.find((item: TItem) => item._id === ingredients[i])\n      );\n    }\n    return orderIngredients;\n  }\n  function totalSum() {\n    const sum = orderIngredients.reduce(\n      (acc: number, item: TItem | undefined) => {\n        return acc + item!.price;\n      },\n      0\n    );\n    return sum;\n  }\n  return (\n    <Link\n      style={{ textDecoration: 'none', color: 'white' }}\n      to={`${location.pathname}/${id}`}\n      state={{ background: location.pathname }}\n    >\n      <div className={`${feedOrderStyle.container} mb-4 p-5`}>\n        <div className={`${feedOrderStyle.tracking} pb-4`}>\n          <p className=\"text text_type_digits-default\">{number}</p>\n          <p className=\"text text_type_main-default text_color_inactive\">\n            {parseDate(date)}\n          </p>\n        </div>\n\n        <p className=\"mb-2 text text_type_main-medium\">{name}</p>\n        {location.pathname === '/profile/orders' && (\n          <p className=\"text text_type_main-small\">\n            {status === 'done'\n              ? russian\n                ? 'Выполнен'\n                : 'Done'\n              : status === 'denied'\n              ? russian\n                ? 'Готовится'\n                : 'Cooking'\n              : russian\n              ? 'Отменен'\n              : 'Dismissed'}\n          </p>\n        )}\n        <div className={`${feedOrderStyle.main} pt-4`}>\n          <div className={feedOrderStyle.pictures}>\n            {orderIngredients.map(\n              (item: TItem | undefined, index: number, arr) => {\n                if (item !== undefined) {\n                  if (arr.length > 6 && index + 1 === ingredients.length) {\n                    return (\n                      <div key={index}>\n                        <p\n                          className={`text text_type_main-small ${feedOrderStyle.rest}`}\n                        >\n                          {ingredients.length > 6 &&\n                            `+${ingredients.length - 6}`}\n                        </p>\n                        <div\n                          style={imageStyle(item.image_mobile, index)}\n                          className={feedOrderStyle.lastPicture}\n                        ></div>\n                      </div>\n                    );\n                  } else if (index === 0) {\n                    return (\n                      <div\n                        style={imageStyle(item.image_mobile, index)}\n                        className={feedOrderStyle.picture}\n                        key={index}\n                      ></div>\n                    );\n                  } else if (index < 5) {\n                    return (\n                      <div\n                        style={imageStyle(item.image_mobile, index)}\n                        className={feedOrderStyle.picture}\n                        key={index}\n                      ></div>\n                    );\n                  } else {\n                    return '';\n                  }\n                } else {\n                  return '';\n                }\n              }\n            )}\n          </div>\n          <p\n            className={`${feedOrderStyle.price} text text_type_digits-default`}\n          >\n            {allIngredients.length > 0 && totalSum()}\n            <CurrencyIcon type=\"primary\" />\n          </p>\n        </div>\n      </div>\n    </Link>\n  );\n};\nexport { FeedOrder };\n","import React, { useEffect, useState } from 'react';\nimport profileStyles from './profile.module.css';\nimport {\n  EmailInput,\n  PasswordInput,\n  Input,\n  Button,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport { ProfileButton } from 'components/profile-button/profile-button';\nimport { useLocation, useNavigate, useParams } from 'react-router';\nimport { useDispatch, useSelector } from '../utils/hooks';\nimport { onEditUserInfo, onSignOut } from 'services/actions/auth';\n\nimport { getGetEditProfileResetAction } from 'services/actions/auth/edit-profile';\nimport { FeedOrder } from 'components/feed-order/feed-order';\nimport {\n  wsConnectionClosed,\n  wsConnectionStartForUser,\n} from 'services/actions/wsFeed';\nimport { TFeedOrder } from 'utils/types';\nconst Profile = () => {\n  const {\n    name,\n    email,\n    refreshToken,\n    accessToken,\n    refreshTokenSuccess,\n    signOutSuccess,\n    editProfileSuccess,\n    loggedIn,\n  } = useSelector((store) => store.auth);\n  const russian = localStorage.getItem('rus');\n  const [userEmail, setUserEmail] = useState<string>(email);\n\n  const [password, setPassword] = useState('');\n  const [userName, setUserName] = useState<string>(name);\n  const [isInputChange, setIsInputChange] = useState(false);\n  const currentId = useParams();\n  const location = useLocation();\n  const isAccessToken = localStorage.getItem('accessToken');\n  const orders = useSelector((store) => store.wsFeed.userFeed.orders) || [];\n  const navigate = useNavigate();\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    location.pathname === '/profile/orders' ||\n    location.pathname === `/profile/orders/${currentId.id}`\n      ? dispatch(wsConnectionStartForUser())\n      : dispatch(wsConnectionClosed());\n  }, [dispatch, currentId.id, location.pathname]);\n\n  function handleChangeEmail(e: React.ChangeEvent<HTMLInputElement>): void {\n    setUserEmail(e.target.value);\n  }\n\n  function handleChangePassword(e: React.ChangeEvent<HTMLInputElement>): void {\n    setPassword(e.target.value);\n  }\n\n  function handleChangeName(e: React.ChangeEvent<HTMLInputElement>): void {\n    setUserName(e.target.value);\n  }\n  useEffect(() => {\n    if (!isAccessToken && !loggedIn) {\n      navigate('/login');\n    }\n  }, [loggedIn, navigate, isAccessToken]);\n\n  useEffect(() => {\n    if (!(userEmail === email && password === '' && userName === name)) {\n      setIsInputChange(true);\n    } else {\n      setIsInputChange(false);\n    }\n    // eslint-disable-next-line\n  }, [userEmail, password, userName]);\n\n  function onEditProfile(e: { preventDefault: () => void }) {\n    e.preventDefault();\n    const refreshToken = localStorage.getItem('refreshToken');\n    const accessToken = localStorage.getItem('accessToken');\n    dispatch(\n      onEditUserInfo(userEmail, userName, password, accessToken, refreshToken)\n    );\n  }\n\n  useEffect(() => {\n    if (refreshTokenSuccess) {\n      localStorage.setItem('accessToken', accessToken);\n      localStorage.setItem('refreshToken', refreshToken);\n      dispatch(\n        onEditUserInfo(userEmail, userName, password, accessToken, refreshToken)\n      );\n    }\n    // eslint-disable-next-line\n  }, [accessToken, refreshTokenSuccess, refreshToken, dispatch]);\n\n  useEffect(() => {\n    if (signOutSuccess) {\n      navigate('/login');\n      setUserEmail('');\n      setPassword('');\n      setUserName('');\n      setIsInputChange(false);\n    }\n  }, [signOutSuccess, navigate]);\n\n  useEffect(() => {\n    if (editProfileSuccess) {\n      setIsInputChange(false);\n      dispatch(getGetEditProfileResetAction());\n    }\n  }, [editProfileSuccess, userName, userEmail, dispatch]);\n\n  function cancelChanges() {\n    setUserName(JSON.parse(localStorage.getItem('userName')!));\n    setUserEmail(JSON.parse(localStorage.getItem('userEmail')!));\n    setPassword('');\n  }\n\n  function signOut() {\n    const refreshToken = localStorage.getItem('refreshToken');\n    dispatch(onSignOut(refreshToken));\n  }\n\n  return (\n    <section className={`mt-30 ${profileStyles.profile}`}>\n      <div className={`mr-15 ${profileStyles.container}`}>\n        <ProfileButton\n          link=\"/profile\"\n          title={russian ? 'Профиль' : 'Profile'}\n          onSignOut={undefined}\n          children={undefined}\n        />\n        <ProfileButton\n          link=\"/profile/orders\"\n          title={russian ? 'История заказов' : 'Order history'}\n          onSignOut={undefined}\n          children={undefined}\n        />\n        <ProfileButton\n          onSignOut={signOut}\n          link=\"\"\n          title={russian ? 'Выход' : 'Log out'}\n          children={undefined}\n        />\n        <p\n          className={`mt-20 text text_type_main-small text_color_inactive ${profileStyles.paragraph}`}\n        >\n          {russian\n            ? 'В этом разделе вы можете изменить свои персональные данные'\n            : 'In this section you can change your personal data'}\n        </p>\n      </div>\n      <div className={profileStyles.information}>\n        {location.pathname === '/profile' ? (\n          <form onSubmit={onEditProfile}>\n            <div className=\"mb-6\">\n              <Input\n                value={userName}\n                onChange={handleChangeName}\n                type={'text'}\n                placeholder={russian ? 'Имя' : 'Name'}\n                icon={'EditIcon'}\n              />\n            </div>\n            <div className=\"mb-6\">\n              <EmailInput\n                onChange={handleChangeEmail}\n                value={userEmail}\n                name={''}\n              />\n            </div>\n            <div>\n              <PasswordInput\n                onChange={handleChangePassword}\n                value={password}\n                name={''}\n              />\n            </div>\n            {isInputChange && (\n              <div className={`mt-6 ${profileStyles.buttonContainer}`}>\n                <button\n                  onClick={cancelChanges}\n                  className={profileStyles.cancelButton}\n                  type=\"button\"\n                >\n                  {russian ? 'Отмена' : 'Cancel'}\n                </button>\n                <Button type=\"primary\" size=\"medium\">\n                  {russian ? 'Сохранить' : 'Save'}\n                </Button>\n              </div>\n            )}\n          </form>\n        ) : (\n          orders.length > 0 &&\n          [...orders]\n            .reverse()\n            .map((item: TFeedOrder, index: number) => (\n              <FeedOrder\n                id={item._id}\n                key={index}\n                name={item.name}\n                date={item.createdAt}\n                number={'#' + String(item.number)}\n                status={item.status}\n                ingredients={item.ingredients}\n              />\n            ))\n        )}\n      </div>\n    </section>\n  );\n};\nexport { Profile };\n","import React, { useEffect, useState } from 'react';\nimport { AuthForm } from 'components/auth-form/auth-form';\nimport { Input } from '@ya.praktikum/react-developer-burger-ui-components';\nimport { onRecoveryPassword } from 'services/actions/auth';\nimport { useDispatch, useSelector } from '../utils/hooks';\nimport { useNavigate } from 'react-router';\n\nconst RecoveryPassword = () => {\n  const russian = localStorage.getItem('rus');\n  const dispatch = useDispatch();\n  const [email, setEmail] = useState('');\n  const navigate = useNavigate();\n  const { recoveryPasswordSuccess, loggedIn } = useSelector(\n    (store) => store.auth\n  );\n\n  function recoveryPassword(e: { preventDefault: () => void }) {\n    e.preventDefault();\n    dispatch(onRecoveryPassword(email));\n  }\n  useEffect(() => {\n    if (loggedIn === true) {\n      navigate('/react-burger');\n    }\n  }, [loggedIn,navigate]);\n\n  function handleChangeEmail(e: React.ChangeEvent<HTMLInputElement>): void {\n    setEmail(e.target.value);\n  }\n\n  useEffect(() => {\n    if (recoveryPasswordSuccess) {\n      navigate('/reset-password');\n      setEmail('');\n    }\n  }, [recoveryPasswordSuccess, navigate]);\n\n  return (\n    <AuthForm\n      onSubmit={recoveryPassword}\n      title={russian ? 'Восстановление пароля' : 'Password recovery '}\n      button={russian ? 'Восстановить' : 'Recover'}\n      question={russian ? 'Вспомнили пароль?' : 'Rembered password?'}\n      questionLink={russian ? 'Войти' : 'Sign in'}\n      recovery={''}\n      recoveryLink={''}\n    >\n      <div className=\"mb-6 mt-6\">\n        <Input\n          value={email}\n          onChange={handleChangeEmail}\n          placeholder={'E-mail'}\n          type={'email'}\n          size={'default'}\n        />\n      </div>\n    </AuthForm>\n  );\n};\nexport { RecoveryPassword };\n","import React, { useEffect, useState } from 'react';\nimport { AuthForm } from 'components/auth-form/auth-form';\nimport {\n  PasswordInput,\n  Input,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport { onRegister } from 'services/actions/auth';\nimport { useDispatch, useSelector } from '../utils/hooks';\nimport { useNavigate } from 'react-router';\n\n\nconst Register = () => {\n  const russian = localStorage.getItem('rus');\n  const dispatch = useDispatch();\n  const navigate = useNavigate();\n  const [email, setEmail] = useState('');\n  const [password, setPassword] = useState('');\n  const [name, setName] = useState('');\n  const { accessToken, registerSuccess, refreshToken, loggedIn } = useSelector(\n    (store) => store.auth\n  );\n  useEffect(() => {\n    if (loggedIn === true) {\n      navigate('/react-burger');\n    }\n  }, [loggedIn,navigate]);\n\n  function handleChangeEmail(e: React.ChangeEvent<HTMLInputElement>): void {\n    setEmail(e.target.value);\n  }\n\n  function handleChangePassword(e: React.ChangeEvent<HTMLInputElement>): void {\n    setPassword(e.target.value);\n  }\n\n  function handleChangeName(e: React.ChangeEvent<HTMLInputElement>): void {\n    setName(e.target.value);\n  }\n\n  function signUp(e: { preventDefault: () => void }) {\n    e.preventDefault();\n    dispatch(onRegister(email, password, name));\n  }\n\n  useEffect(() => {\n    if (registerSuccess) {\n      localStorage.setItem('accessToken', accessToken);\n      localStorage.setItem('refreshToken', refreshToken);\n      navigate('/react-burger');\n      setEmail('');\n      setName('');\n      setPassword('');\n    }\n  }, [registerSuccess, navigate, refreshToken, accessToken]);\n\n  return (\n    <AuthForm\n      title={russian ? 'Регистрация' : 'Sign up'}\n      button={russian ? 'Зарегистрироваться' : 'Sign up'}\n      question={russian ? 'Уже зарегистрированы?' : 'Have an account already?'}\n      questionLink={russian ? 'Войти' : 'Log in '}\n      onSubmit={signUp}\n      recovery={''}\n      recoveryLink={''}\n    >\n      <div className=\"mb-6 mt-6\">\n        <Input\n          value={name}\n          onChange={handleChangeName}\n          errorText={russian ? 'Ошибка' : 'Error'}\n          placeholder={russian ? 'Имя' : 'Name'}\n          size={'default'}\n          icon={'EditIcon'}\n        />\n      </div>\n      <div className=\"mb-6\">\n        <Input\n          onChange={handleChangeEmail}\n          value={email}\n          errorText={russian ? 'Ошибка' : 'Error'}\n          placeholder={'E-mail'}\n          type={'email'}\n          size={'default'}\n        />\n      </div>\n      <div>\n        <PasswordInput\n          value={password}\n          onChange={handleChangePassword}\n          size={'default'}\n          name={''}\n        />\n      </div>\n    </AuthForm>\n  );\n};\nexport { Register };\n","import React, { useEffect, useState } from 'react';\nimport { AuthForm } from 'components/auth-form/auth-form';\nimport {\n  PasswordInput,\n  Input,\n} from '@ya.praktikum/react-developer-burger-ui-components';\nimport { useDispatch, useSelector } from '../utils/hooks';\nimport { useNavigate } from 'react-router';\nimport { onResetPassword } from 'services/actions/auth';\n\nconst ResetPassword = () => {\n  const dispatch = useDispatch();\n  const [password, setPassword] = useState('');\n  const [code, setCode] = useState('');\n  const navigate = useNavigate();\n  const { resetPasswordSuccess, recoveryPasswordSuccess, loggedIn } =\n    useSelector((store) => store.auth);\n  const russian = localStorage.getItem('rus');\n  function resetPassword(e: React.ChangeEvent<HTMLInputElement>): void {\n    e.preventDefault();\n    dispatch(onResetPassword(password, code));\n  }\n\n  useEffect(() => {\n    if (resetPasswordSuccess) {\n      navigate('/react-burger');\n      setPassword('');\n      setCode('');\n    }\n  }, [resetPasswordSuccess, navigate]);\n\n  function handleChangePassword(e: React.ChangeEvent<HTMLInputElement>): void {\n    setPassword(e.target.value);\n  }\n\n  function handleChangeCode(e: React.ChangeEvent<HTMLInputElement>): void {\n    setCode(e.target.value);\n  }\n\n  useEffect(() => {\n    if (loggedIn === true) {\n      navigate('/react-burger');\n    }\n    if (recoveryPasswordSuccess === false) {\n      navigate('/forgot-password');\n    }\n  }, [loggedIn, navigate, recoveryPasswordSuccess]);\n\n  return (\n    <AuthForm\n      onSubmit={resetPassword}\n      title={russian ? 'Восстановление пароля' : 'Password recovery'}\n      button={russian ? 'Сохранить' : 'Save'}\n      question={russian ? 'Вспомнили пароль?' : 'Rembered password?'}\n      questionLink={russian ? 'Войти' : 'Log in'}\n      recovery={''}\n      recoveryLink={''}\n    >\n      {!loggedIn && (\n        <>\n          <div className=\"mb-6 mt-6\">\n            <PasswordInput\n              value={password}\n              onChange={handleChangePassword}\n              size={'default'}\n              name={''}\n            />\n          </div>\n          <div className=\"mb-6\">\n            <Input\n              value={code}\n              onChange={handleChangeCode}\n              placeholder={\n                russian\n                  ? 'Введите код из письма'\n                  : 'Enter the code from the letter'\n              }\n              size={'default'}\n            />\n          </div>\n        </>\n      )}\n    </AuthForm>\n  );\n};\nexport { ResetPassword };\n","import { FeedOrder } from 'components/feed-order/feed-order';\nimport React, { useEffect } from 'react';\nimport { useLocation, useParams } from 'react-router';\nimport { getIngredients } from 'services/actions/ingredients';\nimport { wsConnectionStart } from 'services/actions/wsFeed';\nimport { useDispatch, useSelector } from 'utils/hooks';\nimport { TFeedOrder } from 'utils/types';\nimport feedStyle from './feed.module.css';\nconst Feed = () => {\n  const russian = localStorage.getItem('rus');\n  const location = useLocation();\n  const currentId = useParams();\n  const allIngredients = useSelector((store) => store.ingredients.ingredients);\n  const { feed } = useSelector((store) => store.wsFeed);\n  const orders = useSelector((store) => store.wsFeed.feed.orders) || [];\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    allIngredients.length === 0 && dispatch(getIngredients());\n  }, [dispatch, allIngredients.length]);\n\n  useEffect(() => {\n    ((orders.length === 0 && location.pathname === '/feed') ||\n      (orders.length === 0 && location.pathname === `/feed/${currentId.id}`)) &&\n      dispatch(wsConnectionStart());\n  }, [currentId.id, dispatch, location.pathname, orders.length]);\n\n  return (\n    <section className={`mt-25 ${feedStyle.feed}`}>\n      <div className={feedStyle.container}>\n        <div className={`mr-15 ${feedStyle.orderList}`}>\n          <h2 className=\"mb-5 text text_type_main-large\">\n            {russian ? 'Лента заказов' : 'Orders feed'}\n          </h2>\n          {orders.map((item: TFeedOrder, index: number) => (\n            <FeedOrder\n              status={item.status}\n              id={item._id}\n              key={index}\n              name={item.name}\n              date={item.createdAt}\n              number={'#' + String(item.number)}\n              ingredients={item.ingredients}\n            />\n          ))}\n        </div>\n        <div className={feedStyle.orderInforamtion}>\n          <div className={`mb-15 ${feedStyle.container}`}>\n            <div className={feedStyle.orderTable}>\n              <div>\n                <p\n                  className={`mb-6 text text_type_main-medium ${feedStyle.orderTableTitle}`}\n                >\n                  {russian ? 'Готовы:' : 'Ready:'}\n                </p>\n              </div>\n              <div className={`mr-9 ${feedStyle.orders}`}>\n                {orders.map((item: TFeedOrder, index: number) => {\n                  if (item.status === 'done') {\n                    return (\n                      <p\n                        className={`mb-2 text text_type_digits-default ${feedStyle.orderTableInProgress}`}\n                        key={index}\n                      >\n                        {item.number}\n                      </p>\n                    );\n                  } else {\n                    return '';\n                  }\n                })}\n              </div>\n            </div>\n            <div className={feedStyle.orderTable}>\n              <div></div>\n              <p\n                className={`mb-6 text text_type_main-medium ${feedStyle.orderTableTitle}`}\n              >\n                {russian ? 'Готовы:' : 'In progress:'}\n              </p>\n              <div className={feedStyle.orders}>\n                {orders.map((item: TFeedOrder, index: number) => {\n                  if (item.status === 'pending') {\n                    return (\n                      <p\n                        className=\"mb-2 text text_type_digits-default\"\n                        key={index}\n                      >\n                        {item.number}\n                      </p>\n                    );\n                  } else {\n                    return '';\n                  }\n                })}\n              </div>\n            </div>\n          </div>\n          <div>\n            <p className=\"text text_type_main-medium\">\n              {russian ? 'Выполнено за все время:' : 'All time orders total:'}\n            </p>\n            <p\n              className={`${feedStyle.numberShadow} mb-15 text text_type_digits-large`}\n            >\n              {feed.total}\n            </p>\n          </div>\n          <div>\n            <p className=\"text text_type_main-medium\">\n              {russian ? 'Today orders total:' : 'Ready:'}\n            </p>\n            <p\n              className={`${feedStyle.numberShadow} text text_type_digits-large`}\n            >\n              {feed.totalToday}\n            </p>\n          </div>\n        </div>\n      </div>\n    </section>\n  );\n};\nexport { Feed };\n","import React, { FC } from 'react';\nimport feedOrderInforamtionStyles from './order-information.module.css';\nimport { useSelector } from 'utils/hooks';\nimport { TFeedOrder, TItem } from 'utils/types';\n\nconst OrderInforamtion: FC<{ order: TFeedOrder }> = ({ order }) => {\n  const ingredients = useSelector((store) => store.ingredients.ingredients);\n  const orderIngredients = findIngredients();\n  const russian = localStorage.getItem('rus');\n\n  function findIngredients() {\n    let orderIngredients = [];\n    for (let i = 0; i < order.ingredients.length; i++) {\n      orderIngredients.push(\n        ingredients.find((item: TItem) => item._id === order.ingredients[i])\n      );\n    }\n    return orderIngredients;\n  }\n  const filterIngredients = orderIngredients\n    .filter((item, i, arr) => arr.indexOf(item) === i)\n    .map((item) => [item, orderIngredients.filter((x) => x === item).length]);\n\n  function totalSum() {\n    const sum = orderIngredients.reduce(\n      (acc: number, item: { price: number } | undefined) => {\n        return acc + item!.price;\n      },\n      0\n    );\n    return sum;\n  }\n\n  function parseDate(date: string) {\n    const currentDate = new Date().getDate();\n    const regex = /-/g;\n    const orderDay = Number(date.replace(regex, '').split('T')[0].slice(-2));\n    const orderTime = date.slice(11, -8);\n    const term = currentDate - orderDay;\n    return term === 0\n      ? 'Ceгодня, ' + orderTime + ' i-GMT+3'\n      : term === 1\n      ? 'Вчера, ' + orderTime + ' i-GMT+3'\n      : term < 5\n      ? term + ' дня назад, ' + orderTime + ' i-GMT+3'\n      : term + ' дней назад, ' + orderTime + ' i-GMT+3';\n  }\n\n  return (\n    <div className={feedOrderInforamtionStyles.container}>\n      <p\n        className={`mb-10 text text_type_digits-default ${feedOrderInforamtionStyles.number}`}\n      >\n        #{order.number}\n      </p>\n      <h2 className=\"mb-3 text text_type_main-large\">{order.name}</h2>\n      <p\n        className={`mb-15 text text_type_main-small ${feedOrderInforamtionStyles.status}`}\n      >\n        {order.status === 'done'\n          ? russian\n            ? 'Выполнен'\n            : 'Done'\n          : russian\n          ? 'Готовится'\n          : 'Cooking'}\n      </p>\n      <p className=\"mb-6 text text_type_main-medium\">Состав</p>\n      <div className={`mb-10 pr-6 ${feedOrderInforamtionStyles.ingredients}`}>\n        {filterIngredients.map((item: any, index: number) => {\n          return (\n            <div key={index}>\n              <div className={feedOrderInforamtionStyles.ingredient}>\n                <div\n                  className={feedOrderInforamtionStyles.image}\n                  style={{\n                    backgroundImage: 'url(' + item[0]?.image_mobile + ')',\n                    backgroundPosition: 'center',\n                  }}\n                />\n                <p className=\"text text_type_main-default\">{item[0]?.name}</p>\n                <p className=\"text text_type_digits-default\">\n                  {item[1]} x {item[0]?.price}\n                </p>\n              </div>\n            </div>\n          );\n        })}\n      </div>\n      <div className={feedOrderInforamtionStyles.info}>\n        <p className=\"text text_type_main-small text_color_inactive\">\n          {parseDate(order.createdAt)}\n        </p>\n        <p className=\"text text_type_digits-default\">{totalSum()}</p>\n      </div>\n    </div>\n  );\n};\nexport { OrderInforamtion };\n","import React, { useEffect } from 'react';\nimport { useLocation, useNavigate, useParams } from 'react-router';\nimport { useDispatch, useSelector } from 'utils/hooks';\nimport { Feed } from './feed';\nimport { getCloseIngredientModalAction } from 'services/actions/modal';\nimport { OrderInforamtion } from 'components/order-information/order-information';\nimport { Modal } from 'components/modal/modal';\nimport { Profile } from './profile';\nimport { wsConnectionStart } from 'services/actions/wsFeed';\n\nconst Order = () => {\n  const currentId = useParams();\n  const location = useLocation();\n  const { state } = useLocation();\n  const navigate = useNavigate();\n  const userOrders = useSelector((store) => store.wsFeed.userFeed.orders) || [];\n  const orders = useSelector((store) => store.wsFeed.feed.orders) || [];\n  const ingredients = useSelector((store) => store.ingredients.ingredients);\n  const findOrder = orders.filter(\n    (item: { _id: string }) => currentId.id === item._id\n  )[0];\n\n  const findUserOrder = userOrders.filter(\n    (item: { _id: string }) => currentId.id === item._id\n  )[0];\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    userOrders.length === 0 && state === null && dispatch(wsConnectionStart());\n  }, [ingredients.length, userOrders.length, dispatch, state]);\n\n  function handleCloseModal() {\n    dispatch(getCloseIngredientModalAction());\n    navigate(state.background);\n  }\n  return (\n    <>\n      {state &&\n        ingredients.length &&\n        !(location.pathname === `/profile/orders/${currentId.id}`) && <Feed />}\n      {state &&\n        ingredients.length &&\n        location.pathname === `/profile/orders/${currentId.id}` && <Profile />}\n      {(state && findOrder) || (state && findUserOrder) ? (\n        <Modal onClose={handleCloseModal} title={''}>\n          <OrderInforamtion\n            order={orders.length > 0 ? findOrder : findUserOrder}\n          ></OrderInforamtion>\n        </Modal>\n      ) : (\n        <div>\n          {(findOrder || findUserOrder) && (\n            <OrderInforamtion\n              order={orders.length > 0 ? findOrder : findUserOrder}\n            ></OrderInforamtion>\n          )}\n        </div>\n      )}\n    </>\n  );\n};\nexport { Order };\n","import React, { useEffect } from 'react';\nimport appStyles from './app.module.css';\nimport Main from '../main/main';\nimport { AppHeader } from 'components/header/app-header';\nimport '../../fonts/fonts.css';\nimport { Routes, Route } from 'react-router-dom';\nimport { useDispatch, useSelector } from '../../utils/hooks';\nimport { onCheckAuth, onRefreshToken } from 'services/actions/auth';\nimport { Preloader } from 'components/preloader/preloader';\nimport { NotFound } from 'pages/not-found';\nimport { useLocation } from 'react-router';\nimport { ProtectedRoute } from 'components/protected-route/protected-route';\nimport {\n  Login,\n  Ingredient,\n  Profile,\n  RecoveryPassword,\n  Register,\n  ResetPassword,\n} from 'pages';\nimport { Feed } from 'pages/feed';\nimport { Order } from '../../pages/order';\nimport { getIngredients } from 'services/actions/ingredients';\n\nfunction App() {\n  const location = useLocation();\n  const background = location.state && location.state.background;\n  const {\n    refreshToken,\n    refreshTokenSuccess,\n    authLoading,\n    accessToken,\n    chekAuthFailed,\n  } = useSelector((store) => store.auth);\n  const dispatch = useDispatch();\n  const ingredients = useSelector((store) => store.ingredients.ingredients);\n\n  useEffect(() => {\n    ingredients.length === 0 && dispatch(getIngredients());\n  }, [dispatch, ingredients.length]);\n\n  useEffect(() => {\n    if (!localStorage.getItem('eng')) {\n      localStorage.setItem('rus', 'rus');\n    }\n  }, []);\n\n  const checkAuth = (\n    accessToken: string | null,\n    refreshToken: string | null\n  ) => {\n    dispatch(onCheckAuth(accessToken, refreshToken));\n  };\n\n  useEffect(() => {\n    const pathname = location.pathname;\n    const accessToken = localStorage.getItem('accessToken');\n    if (accessToken) {\n      checkAuth(accessToken, pathname);\n    }\n    // eslint-disable-next-line\n  }, []);\n\n  useEffect(() => {\n    if (refreshTokenSuccess) {\n      localStorage.setItem('accessToken', accessToken);\n      localStorage.setItem('refreshToken', refreshToken);\n      checkAuth(accessToken, refreshToken);\n    }\n    // eslint-disable-next-line\n  }, [accessToken, refreshTokenSuccess, refreshToken]);\n\n  useEffect(() => {\n    if (chekAuthFailed) {\n      const refreshToken = localStorage.getItem('refreshToken');\n      dispatch(onRefreshToken(refreshToken));\n    }\n  }, [chekAuthFailed, dispatch]);\n\n  return (\n    <div className={appStyles.app}>\n      <AppHeader />\n      {authLoading ? (\n        <Preloader />\n      ) : (\n        <Routes>\n          <Route path=\"/react-burger\" element={<Main />} />\n          <Route path=\"/login\" element={<Login />} />\n          <Route path=\"/register\" element={<Register />} />\n          <Route path=\"/forgot-password\" element={<RecoveryPassword />} />\n          <Route path=\"/reset-password\" element={<ResetPassword />} />\n          <Route path=\"/profile/orders\" element={<Profile />} />\n          <Route path=\"/profile/orders/:id\" element={<Order />} />\n          <Route path=\"/feed\" element={<Feed />} />\n          <Route path=\"/feed/:id\" element={<Order />} />\n          <Route path=\"/ingredients/:id\" element={<Ingredient />} />\n          <Route\n            path=\"/profile\"\n            element={\n              <ProtectedRoute>\n                <Profile />\n              </ProtectedRoute>\n            }\n          />\n          <Route path=\"*\" element={<NotFound />}></Route>\n          {background && (\n            <>\n              <Route path=\"/ingredients/:id\" element={<Ingredient />} />\n              <Route path=\"/feed/:id\" element={<Order />} />\n              <Route path=\"/profile/:id\" element={<Order />} />\n            </>\n          )}\n        </Routes>\n      )}\n    </div>\n  );\n}\n\nexport default App;\n","import { MiddlewareAPI } from '@reduxjs/toolkit';\nimport {\n  wsConnectionClosed,\n  wsConnectionError,\n  wsConnectionSuccess,\n  wsGetOrder,\n  wsGetUserOrder,\n} from 'services/actions/wsFeed';\nimport { TApplicationActions, TWsActions } from 'utils/types';\n\nexport const socketMiddleware = (wsUrl: string, wsActions: TWsActions) => {\n  return (store: MiddlewareAPI) => {\n    let socket: WebSocket | undefined;\n    return (\n        next: (arg0: { type: string; data: TApplicationActions }) => void\n      ) =>\n      (action: { type: string; data: TApplicationActions }) => {\n        const { dispatch } = store;\n        const { type } = action;\n        const { wsInit, wsSendMessage, wsUserInit } = wsActions;\n        const accessToken = localStorage.getItem('accessToken');\n        if (type === wsUserInit || type === wsInit) {\n          socket = new WebSocket(\n            `${wsUrl}${type === wsInit ? '/all' : `?token=${accessToken}`}`\n          );\n        }\n        if (socket) {\n          socket.onopen = () => {\n            dispatch(wsConnectionSuccess());\n            if (type === wsSendMessage) {\n              const { data } = action;\n              socket?.send(JSON.stringify(data));\n            }\n          };\n          socket.onerror = () => {\n            dispatch(wsConnectionError());\n          };\n\n          socket.onmessage = (event: { data: string }) => {\n            const regex = /all/g;\n            const { data } = event;\n            const parsedData = JSON.parse(data);\n            const { success, ...restParsedData } = parsedData;\n            if (socket?.url.match(regex) !== null) {\n              dispatch(wsGetOrder(restParsedData));\n            } else {\n              dispatch(wsGetUserOrder(restParsedData));\n            }\n          };\n          socket.onclose = () => {\n            dispatch(wsConnectionClosed());\n          };\n        }\n        next(action);\n      };\n  };\n};\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import {  TItem } from 'utils/types';\r\nimport {\r\n  GET_INGREDIENTS_REQUEST,\r\n  GET_INGREDIENTS_SUCCESS,\r\n  GET_INGREDIENTS_FAILED,\r\n  TGetIngredients,\r\n} from '../actions/ingredients';\r\n\r\ntype TIngredientsState = {\r\n  ingredients: ReadonlyArray<TItem>;\r\n  ingredientsRequest: boolean;\r\n  ingredientsFailed: boolean;\r\n  ingredientsSucces: boolean;\r\n  ingredientsLoading: boolean;\r\n};\r\nconst initialState: TIngredientsState = {\r\n  ingredients: [] ,\r\n  ingredientsLoading:false,\r\n  ingredientsRequest: false,\r\n  ingredientsFailed: false,\r\n  ingredientsSucces: false,\r\n};\r\n\r\nexport const indredientsReducer = (\r\n  state = initialState,\r\n  action: TGetIngredients\r\n) : TIngredientsState => {\r\n  switch (action.type) {\r\n    case GET_INGREDIENTS_REQUEST: {\r\n      return {\r\n        ...state,\r\n        ingredientsRequest: true,\r\n        ingredientsSucces: false,\r\n        ingredientsLoading:true,\r\n      };\r\n    }\r\n    case GET_INGREDIENTS_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        ingredientsRequest: false,\r\n        ingredientsFailed: false,\r\n        ingredientsSucces: true,\r\n        ingredientsLoading:false,\r\n        ingredients: action.data,\r\n      };\r\n    }\r\n    case GET_INGREDIENTS_FAILED: {\r\n      return {\r\n        ...state,\r\n        ingredientsRequest: false,\r\n        ingredientsLoading:false,\r\n        ingredientsFailed: true,\r\n      };\r\n    }\r\n\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { TOrder } from 'utils/types';\r\nimport {\r\n  GET_ORDER_REQUEST,\r\n  GET_ORDER_SUCCESS,\r\n  GET_ORDER_FAILED,\r\n  TGetOrder,\r\n} from '../actions/order';\r\n\r\ntype TOrderState = {\r\n  order: TOrder;\r\n  orderRequest: boolean;\r\n  orderFailed: boolean;\r\n  orderSuccess: boolean;\r\n};\r\nconst initialState: TOrderState = {\r\n  order: {} as TOrder,\r\n  orderRequest: false,\r\n  orderFailed: false,\r\n  orderSuccess: false,\r\n};\r\n\r\nexport const orderReducer = (state = initialState, action: TGetOrder) => {\r\n  switch (action.type) {\r\n    case GET_ORDER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        orderRequest: true,\r\n      };\r\n    }\r\n    case GET_ORDER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        orderRequest: false,\r\n        orderFailed: false,\r\n        orderSuccess: true,\r\n        order: action.data,\r\n      };\r\n    }\r\n    case GET_ORDER_FAILED: {\r\n      return {\r\n        ...state,\r\n        orderRequest: false,\r\n        orderFailed: true,\r\n\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import {\r\n  CLOSE_MODAL_ORDER,\r\n  OPEN_MODAL_ORDER,\r\n  OPEN_MODAL_INGREDIENT,\r\n  CLOSE_MODAL_INGREDIENT,\r\n  TOpenModals,\r\n} from '../actions/modal';\r\n\r\ntype TModalState = {\r\n  isModalOpen: boolean;\r\n  isIngredient: boolean;\r\n  isOrder: boolean;\r\n};\r\n\r\nconst initialState: TModalState = {\r\n  isModalOpen: false,\r\n  isIngredient: false,\r\n  isOrder: false,\r\n};\r\nexport const modalReducer = (state = initialState, action: TOpenModals) => {\r\n  switch (action.type) {\r\n    case OPEN_MODAL_ORDER: {\r\n      return {\r\n        ...state,\r\n        isModalOpen: true,\r\n        isIngredient: false,\r\n        isOrder: true,\r\n      };\r\n    }\r\n    case CLOSE_MODAL_ORDER: {\r\n      return {\r\n        ...state,\r\n        isModalOpen: false,\r\n        isIngredient: false,\r\n        isOrder: false,\r\n      };\r\n    }\r\n    case OPEN_MODAL_INGREDIENT: {\r\n      return {\r\n        ...state,\r\n        isModalOpen: true,\r\n        isIngredient: true,\r\n        isOrder: false,\r\n      };\r\n    }\r\n    case CLOSE_MODAL_INGREDIENT: {\r\n      return {\r\n        ...state,\r\n        isModalOpen: false,\r\n        isIngredient: false,\r\n        isOrder: false,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { TConstructor, TItem } from 'utils/types';\r\nimport {\r\n  ADD_INGREDIENT,\r\n  DELETE_INGREDIENT,\r\n  MOVE_INGREDIENT,\r\n  TConsctructorAction,\r\n  DELETE_ALL_INGREDIENTS,\r\n} from '../actions/constructor';\r\ntype TConstructorState = {\r\n  constructor: TConstructor;\r\n  constructorRequest: boolean;\r\n  constructorFailed: boolean;\r\n};\r\nconst initialState: TConstructorState = {\r\n  constructor: { bun: [], other: [] },\r\n  constructorRequest: false,\r\n  constructorFailed: false,\r\n};\r\n\r\nexport const constructorReducer = (\r\n  state = initialState,\r\n  action: TConsctructorAction\r\n): TConstructorState => {\r\n  switch (action.type) {\r\n    case MOVE_INGREDIENT: {\r\n      return {\r\n        ...state,\r\n        constructor: {\r\n          bun: [...state.constructor.bun],\r\n          other: action.newConstructor,\r\n        },\r\n      };\r\n    }\r\n    case DELETE_INGREDIENT: {\r\n      return {\r\n        ...state,\r\n        constructor: {\r\n          bun: [...state.constructor.bun],\r\n          other: [...state.constructor.other].filter(\r\n            (ingredient: TItem, index: number) =>\r\n              ingredient._id + index !== action.item\r\n          ),\r\n        },\r\n      };\r\n    }\r\n    case ADD_INGREDIENT: {\r\n      return {\r\n        ...state,\r\n        constructor:\r\n          action.newItem.type === 'bun'\r\n            ? { bun: [action.newItem], other: [...state.constructor.other] }\r\n            : {\r\n                bun: [...state.constructor.bun],\r\n                other: [...state.constructor.other, action.newItem],\r\n              },\r\n      };\r\n    }\r\n    case DELETE_ALL_INGREDIENTS: {\r\n      return {\r\n        ...state,\r\n        constructor: { bun: [], other: [] },\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import {\r\n  GET_CHECK_AUTH_FAILED,\r\n  GET_CHECK_AUTH_REQUEST,\r\n  GET_CHECK_AUTH_SUCCESS,\r\n} from 'services/actions/auth/check-auth';\r\nimport {\r\n  GET_EDITPROFILE_FAILED,\r\n  GET_EDITPROFILE_REQUEST,\r\n  GET_EDITPROFILE_SUCCESS,\r\n  GET_EDITPROFILE_RESET,\r\n} from 'services/actions/auth/edit-profile';\r\nimport {\r\n  GET_LOGIN_FAILED,\r\n  GET_LOGIN_REQUEST,\r\n  GET_LOGIN_SUCCESS,\r\n} from 'services/actions/auth/login';\r\nimport {\r\n  GET_RECOVERY_PASSWORD_FAILED,\r\n  GET_RECOVERY_PASSWORD_REQUEST,\r\n  GET_RECOVERY_PASSWORD_SUCCESS,\r\n} from 'services/actions/auth/recovery-password';\r\nimport {\r\n  GET_REFRESH_TOKEN_FAILED,\r\n  GET_REFRESH_TOKEN_REQUEST,\r\n  GET_REFRESH_TOKEN_SUCCESS,\r\n} from 'services/actions/auth/refresh-token';\r\nimport {\r\n  GET_REGISTER_FAILED,\r\n  GET_REGISTER_REQUEST,\r\n  GET_REGISTER_SUCCESS,\r\n} from 'services/actions/auth/register';\r\nimport {\r\n  GET_RESET_PASSWORD_FAILED,\r\n  GET_RESET_PASSWORD_REQUEST,\r\n  GET_RESET_PASSWORD_SUCCESS,\r\n} from 'services/actions/auth/reset-password';\r\nimport {\r\n  GET_SIGNOUT_FAILED,\r\n  GET_SIGNOUT_SUCCESS,\r\n  GET_SIGNOUT_REQUEST,\r\n} from 'services/actions/auth/signout';\r\nimport {\r\n  GET_LOGGED_IN,\r\n  LOADING_END,\r\n  LOADING_START,\r\n} from 'services/actions/auth';\r\nimport { TApplicationActions } from '../../utils/types';\r\n\r\ntype TAuthState = {\r\n  email: string;\r\n  name: string;\r\n  accessToken: string;\r\n  refreshToken: string;\r\n  registerRequest: boolean;\r\n  registerFailed: boolean;\r\n  registerSuccess: boolean;\r\n  loginRequest: boolean;\r\n  loginFailed: boolean;\r\n  loginSuccess: boolean;\r\n  signOutRequest: boolean;\r\n  signOutFailed: boolean;\r\n  signOutSuccess: boolean;\r\n  resetPasswordRequest: boolean;\r\n  resetPasswordFailed: boolean;\r\n  resetPasswordSuccess: boolean;\r\n  recoveryPasswordRequest: boolean;\r\n  recoveryPasswordFailed: boolean;\r\n  recoveryPasswordSuccess: boolean;\r\n  editProfileRequest: boolean;\r\n  editProfileFailed: boolean;\r\n  editProfileSuccess: boolean;\r\n  refreshTokenRequest: boolean;\r\n  refreshTokenFailed: boolean;\r\n  refreshTokenSuccess: boolean;\r\n  chekAuthRequest: boolean;\r\n  chekAuthFailed: boolean;\r\n  chekAuthSuccess: boolean;\r\n  loading: boolean;\r\n  loggedIn: boolean;\r\n  authLoading: boolean\r\n};\r\n\r\nconst initialState: TAuthState = {\r\n  email: '',\r\n  name: '',\r\n  accessToken: '',\r\n  refreshToken: '',\r\n  authLoading: false,\r\n  registerRequest: false,\r\n  registerFailed: false,\r\n  registerSuccess: false,\r\n\r\n  loginRequest: false,\r\n  loginFailed: false,\r\n  loginSuccess: false,\r\n\r\n  signOutRequest: false,\r\n  signOutFailed: false,\r\n  signOutSuccess: false,\r\n\r\n  resetPasswordRequest: false,\r\n  resetPasswordFailed: false,\r\n  resetPasswordSuccess: false,\r\n\r\n  recoveryPasswordRequest: false,\r\n  recoveryPasswordFailed: false,\r\n  recoveryPasswordSuccess: false,\r\n\r\n  editProfileRequest: false,\r\n  editProfileFailed: false,\r\n  editProfileSuccess: false,\r\n\r\n  refreshTokenRequest: false,\r\n  refreshTokenFailed: false,\r\n  refreshTokenSuccess: false,\r\n\r\n  chekAuthRequest: false,\r\n  chekAuthFailed: false,\r\n  chekAuthSuccess: false,\r\n  loading: false,\r\n  loggedIn: false,\r\n};\r\n\r\nexport const authReducer = (\r\n  state = initialState,\r\n  action: TApplicationActions\r\n) => {\r\n  switch (action.type) {\r\n    case LOADING_START: {\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    }\r\n    case LOADING_END: {\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n      };\r\n    }\r\n    case GET_LOGGED_IN: {\r\n      return {\r\n        ...state,\r\n        loggedIn: true,\r\n      };\r\n    }\r\n    case GET_CHECK_AUTH_REQUEST: {\r\n      return {\r\n        ...state,\r\n        authLoading: true,\r\n        chekAuthRequest: true,\r\n      };\r\n    }\r\n    case GET_CHECK_AUTH_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        authLoading: false,\r\n        chekAuthRequest: false,\r\n        chekAuthFailed: false,\r\n        chekAuthSuccess: true,\r\n        loggedIn: true,\r\n        email: action.data.user.email,\r\n        name: action.data.user.name,\r\n      };\r\n    }\r\n    case GET_CHECK_AUTH_FAILED: {\r\n      return {\r\n        ...state,\r\n        authLoading: false,\r\n        chekAuthRequest: false,\r\n        chekAuthFailed: true,\r\n      };\r\n    }\r\n    case GET_REFRESH_TOKEN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        refreshTokenRequest: true,\r\n      };\r\n    }\r\n    case GET_REFRESH_TOKEN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        refreshTokenRequest: false,\r\n        refreshTokenFailed: false,\r\n        refreshTokenSuccess: true,\r\n        accessToken: action.data.accessToken.split('Bearer ')[1],\r\n        refreshToken: action.data.refreshToken,\r\n      };\r\n    }\r\n    case GET_REFRESH_TOKEN_FAILED: {\r\n      return {\r\n        ...state,\r\n        refreshTokenRequest: false,\r\n        refreshTokenFailed: true,\r\n      };\r\n    }\r\n    case GET_RESET_PASSWORD_REQUEST: {\r\n      return {\r\n        ...state,\r\n        resetPasswordRequest: true,\r\n      };\r\n    }\r\n    case GET_RESET_PASSWORD_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        resetPasswordRequest: false,\r\n        resetPasswordFailed: false,\r\n        resetPasswordSuccess: true,\r\n      };\r\n    }\r\n    case GET_RESET_PASSWORD_FAILED: {\r\n      return {\r\n        ...state,\r\n        resetPasswordRequest: false,\r\n        resetPasswordFailed: true,\r\n      };\r\n    }\r\n    case GET_RECOVERY_PASSWORD_REQUEST: {\r\n      return {\r\n        ...state,\r\n        recoveryPasswordRequest: true,\r\n      };\r\n    }\r\n    case GET_RECOVERY_PASSWORD_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        recoveryPasswordRequest: false,\r\n        recoveryPasswordFailed: false,\r\n        recoveryPasswordSuccess: true,\r\n      };\r\n    }\r\n    case GET_RECOVERY_PASSWORD_FAILED: {\r\n      return {\r\n        ...state,\r\n        recoveryPasswordRequest: false,\r\n        recoveryPasswordFailed: true,\r\n      };\r\n    }\r\n    case GET_EDITPROFILE_REQUEST: {\r\n      return {\r\n        ...state,\r\n        editProfileRequest: true,\r\n      };\r\n    }\r\n    case GET_EDITPROFILE_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        editProfileRequest: false,\r\n        editProfileFailed: false,\r\n        editProfileSuccess: true,\r\n        email: action.data.user.email,\r\n        name: action.data.user.name,\r\n      };\r\n    }\r\n    case GET_EDITPROFILE_FAILED: {\r\n      return {\r\n        ...state,\r\n        editProfileRequest: false,\r\n        editProfileFailed: true,\r\n      };\r\n    }\r\n    case GET_EDITPROFILE_RESET: {\r\n      return {\r\n        ...state,\r\n        editProfileRequest: false,\r\n        editProfileFailed: false,\r\n        editProfileSuccess: false,\r\n      };\r\n    }\r\n    case GET_SIGNOUT_REQUEST: {\r\n      return {\r\n        ...state,\r\n        signOutRequest: true,\r\n      };\r\n    }\r\n    case GET_SIGNOUT_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        signOutRequest: false,\r\n        signOutFailed: false,\r\n        signOutSuccess: true,\r\n        loginSuccess: false,\r\n        registerSuccess: false,\r\n        chekAuthSuccess: false,\r\n        editProfileSuccess: false,\r\n        loggedIn: false,\r\n        email: '',\r\n        accessToken: '',\r\n        refreshToken: '',\r\n        name: '',\r\n      };\r\n    }\r\n    case GET_SIGNOUT_FAILED: {\r\n      return {\r\n        ...state,\r\n        signOutRequest: false,\r\n        signOutFailed: true,\r\n      };\r\n    }\r\n    case GET_LOGIN_REQUEST: {\r\n      return {\r\n        ...state,\r\n        loginRequest: true,\r\n      };\r\n    }\r\n    case GET_LOGIN_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        loginRequest: false,\r\n        loginFailed: false,\r\n        loginSuccess: true,\r\n        loggedIn: true,\r\n        email: action.data.user.email,\r\n        accessToken: action.data.accessToken.split('Bearer ')[1],\r\n        refreshToken: action.data.refreshToken,\r\n        name: action.data.user.name,\r\n        signOutSuccess: false,\r\n      };\r\n    }\r\n    case GET_LOGIN_FAILED: {\r\n      return {\r\n        ...state,\r\n        loginRequest: false,\r\n        loginFailed: true,\r\n      };\r\n    }\r\n    case GET_REGISTER_REQUEST: {\r\n      return {\r\n        ...state,\r\n        registerRequest: true,\r\n      };\r\n    }\r\n    case GET_REGISTER_SUCCESS: {\r\n      return {\r\n        ...state,\r\n        registerRequest: false,\r\n        registerFailed: false,\r\n        registerSuccess: true,\r\n        loggedIn: true,\r\n        signOutSuccess: false,\r\n        email: action.data.user.email,\r\n        name: action.data.user.name,\r\n        accessToken: action.data.accessToken.split('Bearer ')[1],\r\n        refreshToken: action.data.refreshToken,\r\n      };\r\n    }\r\n    case GET_REGISTER_FAILED: {\r\n      return {\r\n        ...state,\r\n        registerRequest: false,\r\n        registerFailed: true,\r\n      };\r\n    }\r\n    default: {\r\n      return state;\r\n    }\r\n  }\r\n};\r\n","import { TFeedOrders } from 'utils/types';\r\nimport {\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_GET_ORDER,\r\n  WS_CONNECTION_START,\r\n  WS_GET_USER_ORDER,\r\n} from '../actions/wsFeed';\r\nimport { TWsFeedAction } from '../actions/wsFeed';\r\n\r\nexport type WsFeedState = {\r\n  wsConnected: boolean;\r\n  orderRequest: boolean;\r\n  orderFailed: boolean;\r\n  feedLoading: boolean;\r\n  feedSuccess: boolean;\r\n  feedRequest: boolean;\r\n  feed: TFeedOrders;\r\n  userFeed: TFeedOrders;\r\n};\r\nconst initialState: WsFeedState = {\r\n  wsConnected: false,\r\n  feed: {} as TFeedOrders,\r\n  userFeed: {} as TFeedOrders,\r\n  orderRequest: false,\r\n  orderFailed: false,\r\n  feedLoading: false,\r\n  feedSuccess: false,\r\n  feedRequest: false,\r\n};\r\n\r\nexport const wsFeedReducer = (\r\n  state = initialState,\r\n  action: TWsFeedAction\r\n): WsFeedState => {\r\n  switch (action.type) {\r\n    case WS_CONNECTION_START:\r\n      return {\r\n        ...state,\r\n        wsConnected: false,\r\n        feedLoading: true,\r\n        feedSuccess: false,\r\n        feedRequest: true,\r\n      };\r\n\r\n    case WS_CONNECTION_SUCCESS:\r\n      return {\r\n        ...state,\r\n        wsConnected: true,\r\n        feedLoading: false,\r\n        feedSuccess: true,\r\n        feedRequest: false,\r\n      };\r\n\r\n    case WS_CONNECTION_ERROR:\r\n      return {\r\n        ...state,\r\n        feedLoading: false,\r\n        feedSuccess: false,\r\n        feedRequest: false,\r\n        wsConnected: false,\r\n      };\r\n\r\n    case WS_CONNECTION_CLOSED:\r\n      return {\r\n        ...state,\r\n        feedLoading: false,\r\n        feedSuccess: false,\r\n        feedRequest: false,\r\n        wsConnected: false,\r\n        feed: {} as TFeedOrders,\r\n        userFeed: {} as TFeedOrders,\r\n      };\r\n\r\n    case WS_GET_ORDER:\r\n      return {\r\n        ...state,\r\n        feed: action.data,\r\n      };\r\n    case WS_GET_USER_ORDER:\r\n      return {\r\n        ...state,\r\n        userFeed: action.data,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import { combineReducers } from 'redux';\r\nimport { indredientsReducer } from './ingredients';\r\nimport { orderReducer } from './order';\r\nimport { modalReducer } from './modal';\r\nimport { constructorReducer } from './constructor';\r\nimport { authReducer } from './auth';\r\nimport { wsFeedReducer } from './wsFeed';\r\nexport const rootReducer = combineReducers({\r\n  auth: authReducer,\r\n  constructorValue: constructorReducer,\r\n  ingredients: indredientsReducer,\r\n  order: orderReducer,\r\n  modal: modalReducer,\r\n  wsFeed: wsFeedReducer,\r\n});\r\n","import { compose, createStore, applyMiddleware } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport { socketMiddleware } from 'services/middleware/socketMiddleware';\r\nimport { rootReducer } from 'services/reducers';\r\nimport { WS_URL } from 'utils/constants';\r\nimport {\r\n  WS_SEND_ORDER,\r\n  WS_CONNECTION_SUCCESS,\r\n  WS_CONNECTION_ERROR,\r\n  WS_CONNECTION_CLOSED,\r\n  WS_CONNECTION_START,\r\n  WS_GET_ORDER,\r\n  WS_CONNECTION_START_FOR_USER,\r\n  WS_GET_USER_ORDER,\r\n} from '../actions/wsFeed';\r\n\r\nconst wsActions = {\r\n  wsInit: WS_CONNECTION_START,\r\n  wsUserInit: WS_CONNECTION_START_FOR_USER,\r\n  wsUserOrder: WS_GET_USER_ORDER,\r\n  wsSendMessage: WS_SEND_ORDER,\r\n  onOpen: WS_CONNECTION_SUCCESS,\r\n  onClose: WS_CONNECTION_CLOSED,\r\n  onError: WS_CONNECTION_ERROR,\r\n  onMessage: WS_GET_ORDER,\r\n};\r\n\r\ndeclare global {\r\n  interface Window {\r\n    __REDUX_DEVTOOLS_EXTENSION_COMPOSE__?: typeof compose;\r\n  }\r\n}\r\n\r\nexport const composeEnhancers =\r\n  window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst enhancer = composeEnhancers(\r\n  applyMiddleware(thunk, socketMiddleware(WS_URL, wsActions))\r\n);\r\nconst store = createStore(rootReducer, enhancer);\r\n\r\nexport { store };\r\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './components/app/app';\r\nimport reportWebVitals from './reportWebVitals';\r\nimport { Provider } from 'react-redux';\r\nimport { BrowserRouter } from 'react-router-dom';\r\nimport { store } from './services/store/store';\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <Provider store={store}>\r\n      <BrowserRouter>\r\n        <App />\r\n      </BrowserRouter>\r\n    </Provider>\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"list\":\"burger-ingredients_list__EBFQd\",\"burgerIngredients\":\"burger-ingredients_burgerIngredients__3IdlK\",\"container\":\"burger-ingredients_container__159Gi\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"burgerConstructor\":\"burger-constructor_burgerConstructor__1tFmH\",\"constructor\":\"burger-constructor_constructor__3M4GC\",\"empty\":\"burger-constructor_empty__1A9sZ\",\"container\":\"burger-constructor_container__3SD6n\",\"sum\":\"burger-constructor_sum__2z3nz\",\"ingredient\":\"burger-constructor_ingredient__1qDL9\",\"bun\":\"burger-constructor_bun__2-W18\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"feed-order_container__3U9j-\",\"tracking\":\"feed-order_tracking__1-vcX\",\"main\":\"feed-order_main__1qA_F feed-order_tracking__1-vcX\",\"border\":\"feed-order_border__3TU5q\",\"pictures\":\"feed-order_pictures__FqSUa\",\"picture\":\"feed-order_picture__23YPx feed-order_border__3TU5q\",\"lastPicture\":\"feed-order_lastPicture__1KL3i feed-order_picture__23YPx feed-order_border__3TU5q\",\"rest\":\"feed-order_rest__36rBe\",\"overlay\":\"feed-order_overlay__3z0Tg\",\"price\":\"feed-order_price__3ZEV4\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"order-information_container__3j3fx\",\"ingredient\":\"order-information_ingredient__3rTsG\",\"info\":\"order-information_info__1eaBu\",\"status\":\"order-information_status__3DlbH\",\"ingredients\":\"order-information_ingredients__3gIDV\",\"image\":\"order-information_image__383Wv\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"profile_container__1x3vQ\",\"profile\":\"profile_profile__Sjo58\",\"paragraph\":\"profile_paragraph__1wdoS\",\"buttonContainer\":\"profile_buttonContainer__1E7nA\",\"cancelButton\":\"profile_cancelButton__20swF\",\"information\":\"profile_information__1-tqX\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"header_header__10FAb\",\"navigation\":\"header_navigation__cuymp\",\"logo\":\"header_logo__1SrzI\",\"languageButton\":\"header_languageButton__2O0bS\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"image\":\"ingredient-details_image__E0RoO\",\"ingredientDetails\":\"ingredient-details_ingredientDetails__KSLJp\",\"list\":\"ingredient-details_list__1aAIQ\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"order-details_container__3QGhD\",\"image\":\"order-details_image__3onPM\",\"name\":\"order-details_name__1JYSA\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"item\":\"ingredients-list_item__2HZ8X\",\"image\":\"ingredients-list_image__96u1M\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"modal\":\"modal_modal__37lJp\",\"button\":\"modal_button__44fLO\",\"name\":\"modal_name__3QSOy\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"button\":\"profile-button_button__6xmZw\",\"link\":\"profile-button_link__Tw56P\",\"active\":\"profile-button_active__22CTg\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"app\":\"app_app__3GRUK\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"main\":\"main_main__3G87d\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"overlay\":\"modal-overlay_overlay__ZKo5w\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"ingredient\":\"constructorFoodElement_ingredient__15ytl\"};"],"sourceRoot":""}